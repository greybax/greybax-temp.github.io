<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Aleksandr Filatov]]></title>
  <link href="http://alfilatov.com/atom.xml" rel="self"/>
  <link href="http://alfilatov.com/"/>
  <updated>2014-12-13T12:08:01+00:00</updated>
  <id>http://alfilatov.com/</id>
  <author>
    <name><![CDATA[Aleksandr Filatov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Как я побывал на .NEXT'14]]></title>
    <link href="http://alfilatov.com/blog/2014/12/09/kak-ia-pobyval-na-next-14/"/>
    <updated>2014-12-09T21:25:37+00:00</updated>
    <id>http://alfilatov.com/blog/2014/12/09/kak-ia-pobyval-na-next-14</id>
    <content type="html"><![CDATA[<p>В <a href="http://alfilatov.com/blog/2014/12/09/vpiechatlieniia-ot-piervogho-khakatona/">предыдущем</a> своем посте я написал про свое первое участие в хакатоне. На следующий день после его окончания в Москве проходила главная <code>.NET</code> конференция страны - <a href="http://dotnext.ru/">.NEXT</a>. Хочу поделиться своими впечатлениями об этом мероприятии.</p>

<p><img src="http://alfilatov.com/images/screenshots/dotnext_logo.png" alt=".Next Logo" /></p>

<p>Итак, в этом году .NEXT&#8217;у исполнилось всего 2 года (<a href="http://dotnext.ru/spb2014/">в прошлом году</a> проходила в Санкт-Петербурге) Несмотря на то, что конференция молодая чувствовалось, что уровень профессионализма докладчиков был очень высоким. Всего в этом году было 22 технических доклада от представителей таких компаний как Microsoft, JetBrains, DevExpress, Futurice, ViaCode и др.
Главным гостем конференции и по совместительству одним из докладчиков был легендарный Dino Esposito <a href="https://twitter.com/despos">@despos</a>. Выступил он с двумя докладами:</p>

<ul>
<li>Challenges, Pains and Points of Software Development Today</li>
<li>ASP.NET vNext: What it means to you and what it means to Microsoft</li>
</ul>


<h3>А пока все по порядку&hellip;</h3>

<p>Конференция началась в 10 утра по Москве. Выдали кружки с надписью .NEXT, бейджики и папку с рекламными брошюрами, в которую было удобно складывать стикеры R#. В зале, где проходило открытие конференции, кресел на всех на хватило, поэтому некоторые сидели прямо в проходах между рядами. Первым докладом конференции был доклад Дино Эспозито &ldquo;Challenges, Pains and Points of Software Development Today&rdquo;. После, докладчики выступали параллельно в 3-х залах из-за чего пришлось выбирать для себя свой маршрут по интересам. Я выбрал следующий:</p>

<ul>
<li><p><em>Что и как нужно защищать в .NET-приложении, Михаил Щербаков</em>.
Интересный доклад с элементами практики, где докладчик продемонстрировал как можно читать <code>private</code>, писать в <code>readonly</code> поля. И напоследок продемонстрировал trusted method chain атаку в действии. Фикс был сделан Mircosoft&#8217;ом месяца 3 назад и уязвимость была доступна в <code>.NET 4.5.1</code> на Windows 7.</p></li>
<li><p><em>FitNesse in development, Игорь Манушин</em>.
Доклад про такую штуку на которой тесты которые ты написал будут понятны даже отделу продаж и клиенту.</p></li>
<li><p><em>Сложности создания больших приложений и пути их решения на примере ReSharper, Кирилл Скрыган</em>.
Тут я немного опоздал, т.к слушал диалог коллег и общался лично с Дмитрием Нестеруком в кулуарах.</p></li>
<li><p><em>C# 6.0: Roslyn и другие нововведения, Тимур Гуев</em>.
Как мне показалось, было слишком мало сказано про сам Roslyn (хотя он является главной фичей <code>C# 6.0</code>). Но при этом большое внимание уделялось &ldquo;синтаксическому сахару&rdquo; в новой версии <code>C#</code></p></li>
<li><p><em>Поговорим о различных версиях .NET, Андрей Акиньшин</em>.
Тут докладчик просто отжигал, на мой взгляд один из лучших докладов конференции. Сравнивались среды исполнения MS.NET и Mono, как работает JIT-компилятор на различных архитектурах, и что вообще нужно помнить девелоперу пишушему кроссплатформенное приложение. Получился очень динамичный, свежий и веселый доклад.</p></li>
<li><p><em>ASP.NET vNext: What it means to you and what it means to Microsoft, Dino Esposito</em>.
Успели перед началом доклада сфотографироваться с самим Дино Эспозито.
Дино рассказал о новой платформе ASP.NET vNext которая приносит в web-разработку новые фичи. Нравится это или нет, но разработчикам придется в итоге переходить на новую платформу, если приложение написано на стеке <code>.NET</code> технологий.</p></li>
<li><p><em>Memory &amp; Performance. Tips &amp; Tricks, Роман Белов</em>.
К сожалению последний доклад дослушал не до конца, т.к торопился на поезд.</p></li>
</ul>


<h3>Итог</h3>

<p>Доклады на конференции понравились, хотелось попасть и на другие, но шли иногда они параллельно. Спасибо оргазиторам за организацию мероприятия, доклады и отдельное спасибо <a href="https://twitter.com/despos">@despos</a> за фото.
Не часто можно сфотографироваться с человеком на чьих книгах ты учишься.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Впечатления от первого хакатона]]></title>
    <link href="http://alfilatov.com/blog/2014/12/09/vpiechatlieniia-ot-piervogho-khakatona/"/>
    <updated>2014-12-09T19:44:16+00:00</updated>
    <id>http://alfilatov.com/blog/2014/12/09/vpiechatlieniia-ot-piervogho-khakatona</id>
    <content type="html"><![CDATA[<p>Пару недель назад мне пришло письмо от одного из представителей Microsoft (который кстати заапрувил меня на BizSpark, наверно это тоже одно из преимуществ моего аккаунта на BizSpark&#8217;е) на тему игрового хакатона, который организует Microsoft в Москве. В хакатонах до этого я никогда не участвовал и, хотя тема <code>gamedev</code> не совсем близка моему профилю, я решил попробовать.
Почему я решил участвовать:</p>

<ul>
<li>Это новый challenge и это круто</li>
<li>Общение с интересными людьми (на хакатоне были представители Microsoft, Unity, Nival, Mail.ru)</li>
<li>Весело провести время</li>
<li>Сразу после хакатона в Москве проходила конференция .NEXT на которую я хотел попасть :). О ней я напишу в следующей своей статье.</li>
<li>Определение и награждение победителей по номинациям</li>
</ul>


<p>Хакатон называется Microsoft Games Jam и проходил он в рамках глобального игрового хакатона <a href="http://ludumdare.com/">Ludum Dare</a> который проходит онлайн. В отличие от Ludum Dare игру нужно было написать за 24 часа, а не за 72.</p>

<p>Как и все хакатоны этот был разделен на этапы:</p>

<ul>
<li>регистрация</li>
<li>представление проектов</li>
<li>формирование команд</li>
<li>кодинг.. пицца&hellip;кодинг&hellip; кофе&hellip; кодинг&hellip; кофе&hellip; спать 2 часа&hellip;и еще куча пиццы и кофе кодинга</li>
<li>представление своих проектов, что успели написать</li>
</ul>


<p>Т.к основной платформой данного хакатона была <code>Unity</code> решили и мы с коллегой не выделяться и попробовать запилить что нибудь на ней. К слову сказать, поставил я Unity 4.6 за день до хакатона, так что все изучали по ходу. Возможность получить прописку, практически в центре Москвы, на 1.5 суток, да еще и с бесплатной едой, выглядит довольно привлекательно, не так ли? :) Вообщем пилили-пилили мы наш Santa Shooter целые сутки, и, наверно как всегда бывает, идея переписать игру пришла к нам за час до окончания кодинга. В итоге, идея получилась довольно интересная, но остуствие дизайнера/художника/аниматора сказалась. Выглядел наш game play не слишком презентабельно, поэтому расчитывать на призовые места нам не пришлось. Зато звук нашей игры оценили в зале и хлопали громко (по крайне мере нам так показалось :)).</p>

<h3>Ссылки</h3>

<p><a href="http://www.youtube.com/watch?v=0L7VA9Jmix4#t=833">Видео</a> с нашим выступлением. Кстати, ребят которые выступали на этом видео в самом начале, мы обошли :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debugging файлов TypeScript в браузере через эмулятор DevExtreme]]></title>
    <link href="http://alfilatov.com/blog/2014/12/02/diebaghghingh-typescript-failov-v-emuliatorie-devextreme/"/>
    <updated>2014-12-02T19:45:38+00:00</updated>
    <id>http://alfilatov.com/blog/2014/12/02/diebaghghingh-typescript-failov-v-emuliatorie-devextreme</id>
    <content type="html"><![CDATA[<p>Недавно встала задача добавить поддержку debugging&#8217;а файлов <code>*.ts</code> в браузере. В нашем случае это Google Chrome.
Постараюсь как можно подробнее описать этот процесс.</p>

<ol>
<li><p>Для начала нужно определить в какой директории находится DevExtreme сервер, который запускает приложение, когда мы нажимаем в VS кнопку <code>Запустить в браузере Google Chrome</code>. Ответ на этот вопрос был найден в одном из тикетов на сайте <a href="https://www.devexpress.com/Support/Center/Question/Details/Q523956">DevExpress</a>. В случае Visual Studio 2012 это путь <code>C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\Extensions\DevExtreme\WebServer</code></p></li>
<li><p>Добавляем в проект <code>*.map файл</code>. Это необходимо для связи файлов <code>js</code> и <code>ts</code></p></li>
<li><p>Заключительный этап - добавление &ldquo;символической ссылки&rdquo; на проект в директории веб сервера DevExtreme. Можно просто скопировать проект в директорию указаную выше. В этом случае мы лишим сервер возможности автоматически подхватывать изменения в проекте. Чтобы это учесть, выполним команду <a href="http://ss64.com/nt/mklink.html">mklink</a>. Для этого:</p>

<ul>
<li>Запускаем <code>cmd</code> под администратором</li>
<li>Переходим в каталог DevExpress WebServer</li>
<li>Выполняем команду <code>mklink /D &lt;project_link_name&gt; &lt;project_path&gt;</code>. В моем случае это <code>mklink /D Pos C:\Projects\Pos</code></li>
<li>Символическая ссылка <code>project_link_name</code> создана в директории <code>project_path</code></li>
</ul>
</li>
</ol>


<p>Дополнительный ссылки:</p>

<ul>
<li><a href="http://js.devexpress.com/Documentation/Howto/SPA_Framework/Application_Design/?version=14_1#Running">Running, Debugging and Deploy DevExtreme applications</a></li>
<li><a href="http://stackoverflow.com/questions/12683820/typescript-in-vs2012-automatically-generating-js-from-ts">Typescript in VS2012: (automatically) generating .js from .ts</a></li>
<li><a href="http://ss64.com/nt/">An A-Z Index of the Windows CMD command line</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Впечатления от конференции Go# Moscow]]></title>
    <link href="http://alfilatov.com/blog/2014/11/19/vpiechatlieniia-ot-konfierientsii-go-number-moscow/"/>
    <updated>2014-11-19T21:24:13+00:00</updated>
    <id>http://alfilatov.com/blog/2014/11/19/vpiechatlieniia-ot-konfierientsii-go-number-moscow</id>
    <content type="html"><![CDATA[<p>Недавно я побывал еще на одной конференции - <a href="http://www.gosharp.ru/">Go# Moscow</a>. К языку программирования <code>Go</code> отношения никакого не имеет.</p>

<p><img src="http://alfilatov.com/images/screenshots/gosharp_logo.png" alt="GoSharp Logo" /></p>

<p>Зачем я поехал? Для себя я выделил основные 2 причины:</p>

<ul>
<li>Пообщаться с коллегами из DevExpress</li>
<li>Послушать доклад от представителя Microsoft про программу BizSpark, членом которой я являюсь.</li>
</ul>


<p>Цели были достигнуты + хорошо провел время с пользой для самообразования. Считаю, что конференции помогают разработчикам оставаться в тренде. Хабр хабром, а живое общение с коллегами имхо считаю продуктивнее.
Итак, что представляла из себя конференция? Конференция была ориентирована на <code>.NET</code>  разработчиков и как им приходится выживать в растущей конкуренции и столь сильном развитии мобильной разработки. Программа конференции состояла из 3 основных секций:</p>

<ol>
<li>Эффективное написание кода</li>
<li>Мобильная разработка</li>
<li>Карьера и образование <code>.NET</code> разработчика + секция стартапы.</li>
</ol>


<p>Хочу рассказать о наиболее значимых на мой взгляд докладах из каждой секции.</p>

<h3>Эффективное написание кода</h3>

<p>Столкнулись два конкурирующих продукта и компании - Сoderush от DevExpress и R# от JetBrains. Использовать Сoderush как инструмент для облегчения написания кода меня докладчик из DevExpress не убедил.</p>

<h3>Мобильная разработка</h3>

<p>Секция мобильной разработки вызывала у меня большой интерес. Здесь обсуждались продукты Xamarin как альтернатива кроссплатформенной разработке под мобильный приложения на <code>C#</code>. и DevExtreme от DevExpress как альтернатива кроссплатформенной разработке с использованием <code>HTML/JS</code>. Несмотря на то, что на работе мне приходится иметь дело с DevExtreme, доклад про Xamarin от ребят из ApperCode и TCS показался гораздо интереснее и живее. После доклада появилось желание потрогать Xamarin. Единственный минус - он платный, а в free версии можно написать приложение только &ldquo;Hello World!&rdquo;, судя по огранечениям которые накладываются.</p>

<h3>Карьера и образование .net разработчика + секция стартапы</h3>

<p>В этой секции доклады были ориентированы больше на студентов и их мотивацию быть крутыми программистами. Был очень содержательный и убедительный доклад от <a href="http://www.toptal.com/resume/dmitry-pavlov">Дмитрия Павлова из Toptal</a> и Александра Рахманова из Kaspersky. Дмитрий рассказывал про компанию где он работает и какие джедаи и ниндзя требуются в топ компаниях. По окончании доклада Дмитрия его еще долго окружали люди, интересующиеся работой в Toptal. После был доклад от Дианы Токмашевой из Microsoft про программу помощи стартапами BizSpark.</p>

<h3>Итог</h3>

<p>В целом конференцией остался доволен. Особенно понравилась организация общения с докладчиками и коллегами из других компаний. Единственное что не хватало, так это розеток для зарядки девайса и места у обеденных стоек.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Пишем игру на HTML5/JS]]></title>
    <link href="http://alfilatov.com/blog/2014/10/13/pishiem-ighru-na-html5-slash-js/"/>
    <updated>2014-10-13T08:34:07+00:00</updated>
    <id>http://alfilatov.com/blog/2014/10/13/pishiem-ighru-na-html5-slash-js</id>
    <content type="html"><![CDATA[<p>На выходных нашлось немного свободного времени и я решил попрактиковаться в <code>gamedev</code> разработке. Давно собирался написать какую-нибудь игрушку, но все руки не доходили. Бегло пробежался по сети в поисках как это делают настоящие гуру. Мне понравилась вот эта <a href="http://jlongster.com/Making-Sprite-based-Games-with-Canvas">статья</a>. За основу своей будущей игры я взял <a href="https://github.com/jlongster/canvas-game-bootstrap">фреймворк автора статьи</a>.</p>

<p><img src="http://alfilatov.com/images/screenshots/towers_game2d.png" alt="Towers game 2D" /></p>

<h2>Начало</h2>

<p>Фреймворк, который я стал использовать включает в себя 4 <code>js</code> файла</p>

<ul>
<li><code>sprite.js</code> - библиотечка работы со спрайтами</li>
<li><code>resources.js</code> - подгрузка ресурсов</li>
<li><code>input.js</code> - библиотека ввода с клавиатуры</li>
<li><code>app.js</code> - основной файл игры</li>
</ul>


<p>Далее буду рассказывать только о файле <code>app.js</code>. Разберем его содержимое.</p>

<p>Для плавности анимации будем использовать <code>requestAnimationFrame</code>. Подробно о нем ознакомиться можно <a href="https://hacks.mozilla.org/2011/08/animating-with-javascript-from-setinterval-to-requestanimationframe/">здесь</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">requestAnimFrame</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">window</span><span class="p">.</span><span class="nx">requestAnimationFrame</span>    <span class="o">||</span>
</span><span class='line'>        <span class="nb">window</span><span class="p">.</span><span class="nx">webkitRequestAnimationFrame</span> <span class="o">||</span>
</span><span class='line'>        <span class="nb">window</span><span class="p">.</span><span class="nx">mozRequestAnimationFrame</span>    <span class="o">||</span>
</span><span class='line'>        <span class="nb">window</span><span class="p">.</span><span class="nx">oRequestAnimationFrame</span>      <span class="o">||</span>
</span><span class='line'>        <span class="nb">window</span><span class="p">.</span><span class="nx">msRequestAnimationFrame</span>     <span class="o">||</span>
</span><span class='line'>        <span class="kd">function</span><span class="p">(</span><span class="nx">callback</span><span class="p">){</span>
</span><span class='line'>            <span class="nb">window</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">callback</span><span class="p">,</span> <span class="mi">1000</span> <span class="o">/</span> <span class="mi">60</span><span class="p">);</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'><span class="p">})();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Разделим разработку нашей игры на несколько этапов:</p>

<ol>
<li>Создание и инициализация холста (canvas) на странице</li>
<li>Добавление основной функции-цикла игры</li>
<li>Инициализация и рендер объектов и ресурсов игры</li>
<li>Обработка событий ввода пользователя</li>
<li>Математика и расчет столкновений объектов в игре</li>
<li>Окончание и перезагрузка игры</li>
</ol>


<h2>Этап 1. Создание и инициализация холста</h2>

<p>Первым делом что мы должны сделать - это создать <code>canvas</code> элемент и добавить его к тегу <code>body</code> основной страницы игры.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">canvas</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">ctx</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span> <span class="o">=</span> <span class="mi">1024</span><span class="p">;</span>
</span><span class='line'><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">=</span> <span class="mi">520</span><span class="p">;</span>
</span><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">canvas</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Создаем объект <code>canvas</code></li>
<li>Указываем, что мы создаем 2D игру (далее будем использовать везде в коде объект <code>ctx</code>)</li>
<li>Задаем размеры холста</li>
<li>Добавляем холст к тегу <code>body</code> на странице</li>
</ul>


<h2>Этап 2. Добавление основной функции-цикла</h2>

<p>Основной цикл необходим для обновления и рендера игры.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">lastTime</span><span class="p">;</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">now</span> <span class="o">=</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">();</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">dt</span> <span class="o">=</span> <span class="p">(</span><span class="nx">now</span> <span class="o">-</span> <span class="nx">lastTime</span><span class="p">)</span> <span class="o">/</span> <span class="mf">1000.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">update</span><span class="p">(</span><span class="nx">dt</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">render</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">lastTime</span> <span class="o">=</span> <span class="nx">now</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">requestAnimFrame</span><span class="p">(</span><span class="nx">main</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Здесь вызываем функцию requestAnimFrame (к сожалению, <a href="http://caniuse.com/#feat=requestanimationframe">поддерживается</a> не во всех браузерах), которая генерирует 60 фреймов/секунду (как это было описано выше).</p>

<h2>Этап 3. Инициализация и рендер объектов и ресурсов игры</h2>

<p>Используем <code>resource.js</code> для загрузки ресурсов в игру. Хорошим правилом является добавить все изображения  в  1 спрайт, но т.к я рисовал не сам, а брал готовые картинки, поэтому я решил с этим на заморачиваться, тем более, что в данном случае это не столь критично. Так это выглядит <a href="https://github.com/greybax/towers_game2d/blob/gh-pages/js/app.js#L57">в коде</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">resources</span><span class="p">.</span><span class="nx">load</span><span class="p">([</span>
</span><span class='line'>  <span class="s1">&#39;img/tower.png&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;img/sprites.png&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;img/spider.png&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;img/hero.png&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;img/bullet.png&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;img/terrain.png&#39;</span>
</span><span class='line'><span class="p">]);</span>
</span><span class='line'><span class="nx">resources</span><span class="p">.</span><span class="nx">onReady</span><span class="p">(</span><span class="nx">init</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>В функции <code>init</code> загружаем мир и добавлеем хэндлер кнопки <code>reset</code>, после game over.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">terrainPattern</span> <span class="o">=</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">createPattern</span><span class="p">(</span><span class="nx">resources</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;img/terrain.png&#39;</span><span class="p">),</span> <span class="s1">&#39;repeat&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;play-again&#39;</span><span class="p">).</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">reset</span><span class="p">();</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  
</span><span class='line'>    <span class="nx">reset</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">lastTime</span> <span class="o">=</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">main</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Начальное состояние</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">player</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">pos</span><span class="o">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
</span><span class='line'>    <span class="nx">sprite</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Sprite</span><span class="p">(</span><span class="s1">&#39;img/hero.png&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">48</span><span class="p">,</span> <span class="mi">30</span><span class="p">],</span> <span class="mi">5</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]),</span>
</span><span class='line'>    <span class="nx">down</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Sprite</span><span class="p">(</span><span class="s1">&#39;img/hero.png&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">48</span><span class="p">,</span> <span class="mi">30</span><span class="p">],</span> <span class="mi">5</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]),</span>
</span><span class='line'>    <span class="nx">up</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Sprite</span><span class="p">(</span><span class="s1">&#39;img/hero.png&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">144</span><span class="p">],</span> <span class="p">[</span><span class="mi">48</span><span class="p">,</span> <span class="mi">30</span><span class="p">],</span> <span class="mi">5</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]),</span>
</span><span class='line'>    <span class="nx">left</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Sprite</span><span class="p">(</span><span class="s1">&#39;img/hero.png&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">48</span><span class="p">],</span> <span class="p">[</span><span class="mi">48</span><span class="p">,</span> <span class="mi">30</span><span class="p">],</span> <span class="mi">5</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]),</span>
</span><span class='line'>    <span class="nx">right</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Sprite</span><span class="p">(</span><span class="s1">&#39;img/hero.png&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">96</span><span class="p">],</span> <span class="p">[</span><span class="mi">48</span><span class="p">,</span> <span class="mi">30</span><span class="p">],</span> <span class="mi">5</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">towers</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">bullets</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">enemies</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">explosions</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">lastTower</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">gameTime</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">isGameOver</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">terrainPattern</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">score</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">scoreEl</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;score&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Обновление состояния игрового процесса</h3>

<p>По нашей задумке пауки должны вылезать со всех 4 сторон игрового поля. Для того чтобы это происходило случайным образом, используем функцию <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random">getRandomInt</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">switch</span> <span class="p">(</span><span class="nx">getRandomInt</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="mi">0</span><span class="o">:</span> <span class="c1">//left</span>
</span><span class='line'>          <span class="nx">enemies</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span><span class='line'>              <span class="nx">pos</span><span class="o">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="p">(</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">-</span> <span class="mi">30</span><span class="p">)],</span>
</span><span class='line'>              <span class="nx">sprite</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Sprite</span><span class="p">(</span><span class="s1">&#39;img/spider.png&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">40</span><span class="p">,</span> <span class="mi">30</span><span class="p">],</span> <span class="mi">5</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
</span><span class='line'>          <span class="p">});</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="mi">1</span><span class="o">:</span> <span class="c1">//top</span>
</span><span class='line'>          <span class="nx">enemies</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span><span class='line'>              <span class="nx">pos</span><span class="o">:</span> <span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
</span><span class='line'>              <span class="nx">sprite</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Sprite</span><span class="p">(</span><span class="s1">&#39;img/spider.png&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">40</span><span class="p">,</span> <span class="mi">30</span><span class="p">],</span> <span class="mi">5</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
</span><span class='line'>          <span class="p">});</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>          <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>   <span class="c1">//bottom</span>
</span><span class='line'>          <span class="nx">enemies</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span><span class='line'>              <span class="nx">pos</span><span class="o">:</span> <span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">-</span> <span class="mi">30</span><span class="p">],</span>
</span><span class='line'>              <span class="nx">sprite</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Sprite</span><span class="p">(</span><span class="s1">&#39;img/spider.png&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">40</span><span class="p">,</span> <span class="mi">30</span><span class="p">],</span> <span class="mi">5</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
</span><span class='line'>          <span class="p">});</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>          <span class="k">default</span><span class="o">:</span> <span class="c1">//right</span>
</span><span class='line'>          <span class="nx">enemies</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span><span class='line'>              <span class="nx">pos</span><span class="o">:</span> <span class="p">[</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="p">(</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">-</span> <span class="mi">30</span><span class="p">)],</span>
</span><span class='line'>              <span class="nx">sprite</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Sprite</span><span class="p">(</span><span class="s1">&#39;img/spider.png&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">40</span><span class="p">,</span> <span class="mi">30</span><span class="p">],</span> <span class="mi">5</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
</span><span class='line'>          <span class="p">});</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Здесь же используем <code>sprite.js</code>. Всю функцию можно посмотреть в <a href="https://github.com/greybax/towers_game2d/blob/gh-pages/js/app.js#L96">исходниках</a>.</p>

<h2>Этап 4. Обработка событий ввода пользователя</h2>

<p>Наш герой должен уметь двигаться вверх, вниз, влево, вправо. Соответственно привожу ниже реализацию данного решения</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">input</span><span class="p">.</span><span class="nx">isDown</span><span class="p">(</span><span class="s1">&#39;DOWN&#39;</span><span class="p">)</span> <span class="o">||</span> <span class="nx">input</span><span class="p">.</span><span class="nx">isDown</span><span class="p">(</span><span class="s1">&#39;s&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">player</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="nx">playerSpeed</span> <span class="o">*</span> <span class="nx">dt</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">player</span><span class="p">.</span><span class="nx">sprite</span> <span class="o">=</span> <span class="nx">player</span><span class="p">.</span><span class="nx">down</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">input</span><span class="p">.</span><span class="nx">isDown</span><span class="p">(</span><span class="s1">&#39;UP&#39;</span><span class="p">)</span> <span class="o">||</span> <span class="nx">input</span><span class="p">.</span><span class="nx">isDown</span><span class="p">(</span><span class="s1">&#39;w&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">player</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-=</span> <span class="nx">playerSpeed</span> <span class="o">*</span> <span class="nx">dt</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">player</span><span class="p">.</span><span class="nx">sprite</span> <span class="o">=</span> <span class="nx">player</span><span class="p">.</span><span class="nx">up</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">input</span><span class="p">.</span><span class="nx">isDown</span><span class="p">(</span><span class="s1">&#39;LEFT&#39;</span><span class="p">)</span> <span class="o">||</span> <span class="nx">input</span><span class="p">.</span><span class="nx">isDown</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">player</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-=</span> <span class="nx">playerSpeed</span> <span class="o">*</span> <span class="nx">dt</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">player</span><span class="p">.</span><span class="nx">sprite</span> <span class="o">=</span> <span class="nx">player</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">input</span><span class="p">.</span><span class="nx">isDown</span><span class="p">(</span><span class="s1">&#39;RIGHT&#39;</span><span class="p">)</span> <span class="o">||</span> <span class="nx">input</span><span class="p">.</span><span class="nx">isDown</span><span class="p">(</span><span class="s1">&#39;d&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">player</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+=</span> <span class="nx">playerSpeed</span> <span class="o">*</span> <span class="nx">dt</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">player</span><span class="p">.</span><span class="nx">sprite</span> <span class="o">=</span> <span class="nx">player</span><span class="p">.</span><span class="nx">right</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>При клике на пробел по задумке должны ставиться башни которые будут стрелять случайным образом во все стороны. Чтобы немного усложнить процесс игры башни разрешается ставить на некоторм расстоянии друг от друга. В данном случае это <code>50px</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">input</span><span class="p">.</span><span class="nx">isDown</span><span class="p">(</span><span class="s1">&#39;SPACE&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">isGameOver</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">isClosest</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">towers</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">player</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="nx">towers</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">&lt;</span> <span class="mi">50</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>          <span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">player</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="nx">towers</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="o">&lt;</span> <span class="mi">50</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">isClosest</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isClosest</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">towers</span><span class="p">[</span><span class="nx">lastTower</span> <span class="o">%</span> <span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">pos</span><span class="o">:</span> <span class="p">[</span><span class="nx">player</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nx">player</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span>
</span><span class='line'>          <span class="nx">lastFire</span><span class="o">:</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">(),</span>
</span><span class='line'>          <span class="nx">sprite</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Sprite</span><span class="p">(</span><span class="s1">&#39;img/tower.png&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">38</span><span class="p">,</span> <span class="mi">35</span><span class="p">],</span> <span class="mi">8</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">15</span><span class="p">])</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>        <span class="nx">lastTower</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Этап 5. Математика и расчет столкновений объектов в игре</h2>

<p>Анимация персонажей, математика движения пуль, и логика движения NPC в игре описаны в функции <code>updateEntities</code>. Вот тут как раз нам и потребуются базовые знания линейной алгебры.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="c1">// Update the towers sprite animation</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">towers</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">tower</span> <span class="o">=</span> <span class="nx">towers</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>      <span class="nx">tower</span><span class="p">.</span><span class="nx">sprite</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">dt</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isGameOver</span> <span class="o">&amp;&amp;</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span> <span class="o">-</span> <span class="nx">tower</span><span class="p">.</span><span class="nx">lastFire</span> <span class="o">&gt;</span> <span class="mi">500</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">pi</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="nx">tower</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="nx">tower</span><span class="p">.</span><span class="nx">sprite</span><span class="p">.</span><span class="nx">size</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">y</span> <span class="o">=</span> <span class="nx">tower</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="nx">tower</span><span class="p">.</span><span class="nx">sprite</span><span class="p">.</span><span class="nx">size</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">bullets</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span><span class='line'>          <span class="nx">pos</span><span class="o">:</span> <span class="p">[</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">],</span>
</span><span class='line'>          <span class="nx">k</span><span class="o">:</span> <span class="nx">getRandomArbitrary</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">pi</span><span class="p">,</span> <span class="mi">5</span> <span class="o">*</span> <span class="nx">pi</span><span class="p">),</span>
</span><span class='line'>          <span class="nx">sprite</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Sprite</span><span class="p">(</span><span class="s1">&#39;img/bullet.png&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">24</span><span class="p">,</span> <span class="mi">24</span><span class="p">])</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>        <span class="nx">tower</span><span class="p">.</span><span class="nx">lastFire</span> <span class="o">=</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">();</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Логика обновления анимации спрайтов башни. И создаем патроны для каждой башни в своем массиве.</p>

<p>Динамика пуль башни:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Update all the bullets</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">bullets</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">bullet</span> <span class="o">=</span> <span class="nx">bullets</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">dt</span> <span class="o">*</span> <span class="nx">bulletSpeed</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">sin</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">bullet</span><span class="p">.</span><span class="nx">k</span><span class="p">);</span>      
</span><span class='line'>    <span class="kd">var</span> <span class="nx">cos</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">bullet</span><span class="p">.</span><span class="nx">k</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">bullet</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+=</span> <span class="nx">sin</span> <span class="o">*</span> <span class="nx">c</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">bullet</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="nx">cos</span> <span class="o">*</span> <span class="nx">c</span><span class="p">;</span>       
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Remove the bullet if it goes offscreen</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">bullet</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="nx">bullet</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">||</span>
</span><span class='line'>        <span class="nx">bullet</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">bullets</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">i</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Напомню, что нашей целью было чтобы башни стреляли случайным образом во всех направлениях.</p>

<p>Пауков мы наделили простым интелектом и поэтому они ползут всегда за нами, чтобы нас укусить.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Update all the enemies</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">enemies</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">x0</span> <span class="o">=</span> <span class="nx">enemies</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">y0</span> <span class="o">=</span> <span class="nx">enemies</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">x1</span> <span class="o">=</span> <span class="nx">player</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">y1</span> <span class="o">=</span> <span class="nx">player</span><span class="p">.</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="nx">enemySpeed</span> <span class="o">*</span> <span class="nx">dt</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">l</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">((</span><span class="nx">x1</span> <span class="o">-</span> <span class="nx">x0</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="nx">x1</span> <span class="o">-</span> <span class="nx">x0</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="nx">y1</span> <span class="o">-</span> <span class="nx">y0</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="nx">y1</span> <span class="o">-</span> <span class="nx">y0</span><span class="p">));</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nx">enemies</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">x1</span> <span class="o">-</span> <span class="nx">x0</span><span class="p">)</span> <span class="o">*</span> <span class="nx">c</span> <span class="o">/</span> <span class="nx">l</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">enemies</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">pos</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">y1</span> <span class="o">-</span> <span class="nx">y0</span><span class="p">)</span> <span class="o">*</span> <span class="nx">c</span> <span class="o">/</span> <span class="nx">l</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">enemies</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">sprite</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">dt</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Remove if offscreen</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">enemies</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">pos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="nx">enemies</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">sprite</span><span class="p">.</span><span class="nx">size</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">enemies</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">i</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Полный код функции <code>updateEntities</code> можно посмотреть в <a href="https://github.com/greybax/towers_game2d/blob/gh-pages/js/app.js#L179">исходникак на GitHub</a>.</p>

<p>Математика расчета столкновений хорошо <a href="http://jlongster.com/Making-Sprite-based-Games-with-Canvas">описана</a> в статье автора (раздел Collision Detection) используемого мной 2d бутстрапа.</p>

<h2>Этап 6. Game Over и рестарт</h2>

<p>Когда пауки доползают до нашего героя наступает конец <del>света</del> игры.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">gameOver</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;game-over&#39;</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="s1">&#39;block&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;game-over-overlay&#39;</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="s1">&#39;block&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">isGameOver</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Показываем окно GAME OVER и кнопку &ldquo;Начать заного&rdquo;. Кликаем ее и все начинается сначала :)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">reset</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;game-over&#39;</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="s1">&#39;none&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;game-over-overlay&#39;</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="s1">&#39;none&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">isGameOver</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">gameTime</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">lastTower</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">score</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">towers</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>    <span class="nx">enemies</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>    <span class="nx">bullets</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">player</span><span class="p">.</span><span class="nx">pos</span> <span class="o">=</span> <span class="p">[</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span> <span class="o">/</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span> <span class="o">/</span> <span class="mi">2</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Заключение</h2>

<p>В итоге, я для себя понял, что в <code>gamedev</code> много плюсов:</p>

<ul>
<li>Весело и интересно проводишь время</li>
<li>Повторяешь курс школьной геометрии. Если игра серьезней, то и универ вспоминаешь :)</li>
<li>Практика программирования игр</li>
<li>Удовлетворение от проделанной работы</li>
</ul>


<p>Посмотреть исходники можно <a href="https://github.com/greybax/towers_game2d/">тут</a>, поиграть <a href="http://greybax.github.io/towers_game2d">здесь</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Используем Fiddler в качестве прокси]]></title>
    <link href="http://alfilatov.com/blog/2014/10/01/ispol'zuiem-fiddler-v-kachiestvie-proksi/"/>
    <updated>2014-10-01T10:05:46+00:00</updated>
    <id>http://alfilatov.com/blog/2014/10/01/ispol'zuiem-fiddler-v-kachiestvie-proksi</id>
    <content type="html"><![CDATA[<p><a href="http://www.telerik.com/fiddler">Fiddler</a> - мощный инструмент для веб дебагинга, мониторинга веб трафика, манипуляций с сессией и т.п. Кроме того в <code>Fiddler</code> есть еще одна мощная фича - это возможность его использования как самостоятельный proxy сервер на машине где он запущен.</p>

<p>Мне эта фича пригодилась когда пришлось подключаться с моего iPhone девайса через <code>VPN</code> к серверу, который находится на другом конце планеты. Аналогично, вместо iPhone мог быть любой девайс, планшет или десктоп.</p>

<p>Постараюсь описать процесс настройки максимально детально. Версия установленного <code>Fiddler</code> у меня - <code>Fiddler Web Debugger (v4.4.8.0)</code>. <code>Built: Wednesday, April 23, 2014</code></p>

<h2>Конфигурация Fiddler</h2>

<ol>
<li>Переходим Tools > Fiddler Options > Connections.</li>
<li><p>Ставим галку Allow remote computers to connect.
<img src="http://alfilatov.com/images/screenshots/allow_remote_to_connect.png" alt="Check &quot;Allow remote computers to connect&quot;" /></p></li>
<li><p>Перезапускаем <code>Fiddler</code></p></li>
<li><p>Следует проверить что в <code>firewall</code> разрешены входящие соединения для Fiddler
<img src="http://alfilatov.com/images/screenshots/fiddler_income_connections.png" alt="Income conections for fiddler process" /></p></li>
<li><p>В правом верхнем углу <code>Fiddler</code> находим <code>Online Indicator</code> и смотрим в нем по какому ip орудует наш <code>Fiddler</code>. Нам нужен локальный адрес машины. Этот ip адрес мы будем указывать в настройках интернет соединения  нашего девайса на вкладке <code>Proxy</code>.
<img src="http://alfilatov.com/images/screenshots/indicator_ip_address.png" alt="Online Indicator" /></p></li>
</ol>


<p>После выполнения этих пунктов наш <code>Fiddler</code> готов принимать входящие соединения с внешних устройств. Соответственно может использоваться как прокси, обрабатывая через себя все запросы, которые приходят с нашего внешнего устройства.</p>

<h2>Конфигурация iPhone</h2>

<ol>
<li>Переходим &lsquo;Настройки&rsquo; > &lsquo;Wi-Fi&rsquo;</li>
<li>Переходим в настройки Wi-Fi соединения</li>
<li>Выбираем раздел &lsquo;Вручную&rsquo; в секции HTTP прокси</li>
<li>В поле Сервер, вводим IP адрес машины где запущен <code>Fiddler</code></li>
<li>Порт - 8888</li>
<li>Аутентификацию отключаем</li>
</ol>


<p><img src="http://alfilatov.com/images/screenshots/iPhone_proxy_settings.png" alt="iPhone proxy settings" /></p>

<p>Теперь после перехода на любой сайт со своего iPhone можно мониторить все request/response в <code>Fiddler</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Профилирование в JS]]></title>
    <link href="http://alfilatov.com/blog/2014/09/04/profilirovaniie-v-js/"/>
    <updated>2014-09-04T13:20:43+00:00</updated>
    <id>http://alfilatov.com/blog/2014/09/04/profilirovaniie-v-js</id>
    <content type="html"><![CDATA[<p>Профилирование - это в первую очерель сбор и анализ информации, а уже потом программирование и работы по улучшению производительности программы.</p>

<h2>Зачем нужна оптимизация?</h2>

<ol>
<li>Загрузка страницы экономит нервы пользователя. Следствие из этого мы получаем лояльных пользователей.</li>
<li>Полезно разработчику, чтобы лучше понять &ldquo;узкие места&rdquo; своего сайта в которых его приложение подвисает.</li>
</ol>


<p>Самый простой способ посмотреть время загрузки <code>DOM</code> не заморачиваясь на профилировании это конечно стандартные профайлеры такие как <code>Chrome Inspector Network</code>, <code>Firebug Net Panel</code> и т.д. Итак, разберемся какие бывают способы оптимизировать работу своего приложения.</p>

<ul>
<li>Метод пристального взгляда</li>
<li>Инструментальное (средствами исполняемой среды)</li>
<li>Ручное (средствами языка)</li>
</ul>


<p>Если с первым методом все понятно, то про другие два я хочу рассказать.</p>

<h2>Инструментальное профилирование</h2>

<p>Во все актуальные версии браузеров уже встроены инструменты разработчика, в которые входит <code>profiler</code>. Так профайлеры есть в: <code>Firefox</code>, <code>IE</code>, <code>Chrome</code>.</p>

<h3>Chrome Inspector Network</h3>

<p>Версия <code>Chrome</code>: 37.0.2062.103 m
<img src="http://alfilatov.com/images/screenshots/ChromeProfiler.png" alt="Chrome Profiler" /></p>

<p>Результат работы профайлера приведен выше. Есть таблица с общим и собственным временем выполнения загрузки скрипта</p>

<p>Плюсы:</p>

<ul>
<li>Возможность профилировать как производительность так и утечки памяти</li>
<li>Варинт просмотра выполнения скриптов на странице графиком и деревом вызовов</li>
<li>Доступен фокус просмотра на конрктной функции или дереве вызова функций</li>
<li>Возможность перейти в участок кода функции</li>
<li>Дерево вызовов</li>
<li>Сортировка</li>
</ul>


<p>Минусы:</p>

<ul>
<li>Слишком нагроможденный интерфейс в режиме просмотра Chart (В <code>Firefox</code> профайлере c этим дела обстоят лучше)</li>
<li>Профилирует не саму страницу, а все что видит, т.е. в профайлер попадают куча плагинов и расширений</li>
<li>Нет возможности выбрать конретный метод или конструктор который мы хотим профилировать</li>
</ul>


<p>Подробно о <a href="https://developer.chrome.com/devtools/docs/cpu-profiling">Profiling JavaScript Performance</a> и о <a href="https://developer.chrome.com/devtools/docs/javascript-memory-profiling">Javascript Memory Profiling</a></p>

<h3>Firebug Net Panel</h3>

<p>Версия <code>Firefox</code>: 32.0
<img src="http://alfilatov.com/images/screenshots/FirefoxProfiler.png" alt="Firebug Profiler" /></p>

<p>Результат работы профайлера приведен выше. Здесь в интерфейс профайлера уже интегрирована диаграмма времени загрузки скриптов по умолчанию. Остальные элементы интерфейса аналогичны профайлеру в Хроме.</p>

<p>Плюсы:</p>

<ul>
<li>Диаграмма времени вызова функций и удобная фильтрация по ней</li>
<li>Возможность перейти в участок кода функции</li>
<li>Дерево вызовов</li>
<li>Сортировка</li>
<li>Удобно выделять детально промежутки времени и детально наблюдать время загрузки</li>
</ul>


<p>Минусы:</p>

<ul>
<li>Нет фильтрации по конретным функциям</li>
<li>Нет возможности выбрать конретный метод или конструктор который мы хотим профилировать</li>
</ul>


<p>Подробно о <a href="https://developer.mozilla.org/en-US/docs/Tools/Profiler">профайлере</a></p>

<h3>Internet Explorer 11</h3>

<p><img src="http://alfilatov.com/images/screenshots/IEProfiler.png" alt="IE Profiler" />
Здесь аналогично Хрому есть профайлер CPU и профайлер памяти.</p>

<p>Плюсы и минусы профилировщика аналогичны тем что описаны выше. Наконец-то появилась возможность переходить прямо из профайлера в код скрипта. До <code>IE 9</code> эта функция отстутствовала.</p>

<h2>Ручное профилирование</h2>

<p>Бывают задачи когда нужно посмореть время выполнения конкретных функций или конструкторов, использовать встроенные профилировщики и разбираться в дереве вызовов в поисках нужной функции бывает довольно неудобно. На эти случаи удобно использовать следующие конструкции языка <code>javascript</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">t</span> <span class="o">=</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
</span><span class='line'><span class="nx">code_to_measure</span><span class="p">();</span>
</span><span class='line'><span class="nx">time</span> <span class="o">=</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()</span> <span class="o">-</span> <span class="nx">t</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Более удобный варинт реализует паттерн Декоратор:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">profile</span><span class="p">(</span><span class="nx">func</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">wrapper</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">start</span> <span class="o">=</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">func</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">arguments</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">func</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()</span> <span class="o">-</span> <span class="nx">start</span><span class="p">,</span> <span class="s2">&quot;ms&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">wrapper</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Вызываем функцию профайлер так</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">code_to_measure</span> <span class="o">=</span> <span class="nx">profile</span><span class="p">(</span><span class="nx">code_to_measure</span><span class="p">);</span>
</span><span class='line'><span class="nx">code_to_measure</span><span class="p">();</span>
</span><span class='line'><span class="o">&gt;</span><span class="nx">code_to_measure</span> <span class="mi">10</span> <span class="nx">ms</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Итог</h2>

<p>Идеального для себя профайлера я не нашел, довольно симпатичными выглядят встроенные в <code>Chrome</code> и в <code>Firefox</code>, но они не имеют части функционала которая выделяла бы их из общей массы. Тем более, оптимузируя свое приложение под тот или иной браузер приходится сталкиваться с его встроенным профайлером. Не стоит забывать и про старые ручные методы которые часто помогают.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Как и зачем я перешел с Blogger на Octopress]]></title>
    <link href="http://alfilatov.com/blog/2014/08/27/kak-i-zachiem-ia-pierieshiel-s-blogger-na-octopress/"/>
    <updated>2014-08-27T08:28:59+00:00</updated>
    <id>http://alfilatov.com/blog/2014/08/27/kak-i-zachiem-ia-pierieshiel-s-blogger-na-octopress</id>
    <content type="html"><![CDATA[<p>Я использовал Blogger c 2012 года. Мне эта система показалась недостаточно удобной, чтобы продолжать ее использовать в дальнейшем. Неудобство проявлялось, когда в пост нужно было вставить участки кода или добавлять картинки. HTML редактор генерирует много лишнего кода. В итоге я решил подыскать себе новый блог-движок.</p>

<h2>Что я хотел получить</h2>

<ul>
<li>Писать больше постов, не заморачиваясь на разметку HTML/CSS</li>
<li>Иметь больше свободы в редизайне своего блога</li>
</ul>


<p>Под вышеперечисленное подходит Octopress. Это движок генерации статических веб страниц написанный на <code>Ruby</code>. Окончательное решение было принято после прохождения курса <a href="https://class.coursera.org/webapplications-002">Web Application Architectures</a> на Coursera, где в качестве примера языка использовался <code>Ruby on Rails</code>. В повседневной жизни я пользователь винды, а ставить <code>Ruby</code> окружение на нее дело не из приятных, ставить виртуалку не хочется, и, погуглив, наткнулся на замечательный сайт <a href="https://www.nitrous.io/">nitrous.io</a>. Сайт предлагает на бесплатном аккаунте доступ к box&#8217;у с окружением для целого ряда языков. В нашем случае это <code>Ruby</code>
При таком подходе мы можем писать в блог из любого места, где есть доступ в интернет, и нам не нужно иметь машину или виртуалку с исходниками своего блога. Считаю, что это достаточно весомый аргумент в пользу использования облачного хостинга с поддержкой IDE.</p>

<h2>Плюсы переезда</h2>

<ul>
<li>Markdown разметка. Не нужно уделять большое внимание HTML разметке. Концентрируешься больше на написание поста.</li>
<li>Версионирование</li>
<li>Удобно писать из редакторов Vim, хотя это для меня не является основным выбором</li>
</ul>


<h2>Минусы переезда</h2>

<ul>
<li>Страницы с Blogger стоят выше в результатах поиска гугла при равных условиях</li>
<li>Не нужно заморачиваться на хостинге. Хотя это не проблема и со случаем Octopress</li>
</ul>


<h2>Мигригуем</h2>

<ul>
<li>Подготовка</li>
<li>Развертывание</li>
</ul>


<h3>Подготовка</h3>

<p>Регистрируемся на сайте <a href="https://www.nitrous.io.">https://www.nitrous.io.</a> Выбираем в качестве окружения box c <code>Ruby</code>. Далее выполняем все по шагам как описано <a href="http://octopress.org/docs/setup/">тут</a> и <a href="http://octopress.org/docs/configuring/">конфигурируем</a>.</p>

<p>Для миграции постов на Octopress нужно:</p>

<ul>
<li>Экспотировать их в файл в своем аккаунте в Blogger</li>
<li>Заюзать <a href="https://gist.github.com/1765496">скрипт</a></li>
</ul>


<p>После этого вы получите кучу сообщений, которые уже являются частью вашего сайта. Проверьте, все ли корректно.
Скрипт так же импортирует комментарии, но в неудобном для просмотра виде. (Tip: вы можете отключить комментарии перед экспортом постов из Blogger).
Теперь все готово для того чтобы равернуть наш блог.</p>

<h3>Развертывание</h3>

<p>На этом этапе мы получили блог на Octopress? куда мы импортировали свои посты из Blogger. Для развертывания я использовал  Github Pages, но процесс развертывания на <a href="http://octopress.org/docs/deploying/heroku">Heroku</a> или <a href="http://octopress.org/docs/deploying/rsync/">через RSync на свой хостинг</a> отличаются незначительно.</p>

<p>Процесс развертывания подробно описан на <a href="http://octopress.org/docs/deploying/github/">сайте Octopress</a>.</p>

<h3>Итог</h3>

<ul>
<li>Получили окружение с IDE для <code>Ruby</code>, которое доступно прямо из браузера.</li>
<li>Удовольствие от написания постов в markdown разметке, расходуя минимум времени на HTML разметку.</li>
<li>Поддержку &ldquo;из коробки&rdquo; различных социальных плагинов (twitter, github, facebook). Легко добавлять свои.</li>
<li>Удобная кастомизация design themes свое блога. При желании можно сменить стандартную тему или сделать свою. Большой выбор <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">тут</a></li>
<li>Стимул изучать <code>Rubу</code> :)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Как я побывал на DevConf'14]]></title>
    <link href="http://alfilatov.com/blog/2014/07/07/devconf14/"/>
    <updated>2014-07-07T00:00:00+00:00</updated>
    <id>http://alfilatov.com/blog/2014/07/07/devconf14</id>
    <content type="html"><![CDATA[<div class='post'>
Наконец-то нашел время написать свои впечатления от прошедшей конференции <a href="http://devconf.ru/">DevConf&#8217;14</a>. Посетил я эту конференцию в первый раз, но по рассказам знакомых слышал что конференция имеет широкий формат и приезжают на нее иностранные докладчики (однажды ее посетил сам <a href="http://ru.wikipedia.org/wiki/%D0%9B%D0%B5%D1%80%D0%B4%D0%BE%D1%80%D1%84,_%D0%A0%D0%B0%D1%81%D0%BC%D1%83%D1%81">Расмус Лендорф</a>). Конференция имеет созвучное название схожее с DevCon, но общего с той конференцией имеет мало. Если кратко, то DevConf - конференция веб разработчиков. DevCon - - конференция технологий Microsoft.<br /><a name='more'></a><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-vTyfJO6tRmo/U7m8cR-sWJI/AAAAAAAABCw/9Aja0kfPa64/s1600/iMyKWnmAMGk.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-vTyfJO6tRmo/U7m8cR-sWJI/AAAAAAAABCw/9Aja0kfPa64/s1600/iMyKWnmAMGk.jpg" height="298" width="400" /></a></div><br /><br />В этом году конференция имела 7 секций (php, ruby, python, common, js, mobi, storage)&nbsp;+ <a href="http://devconf.ru/mk">мастер классы</a> которые проходили на второй день, но на них мне попасть не довелось. Оплатил только первый день. Меня интересовали секции common, js и storage.<br /><h2>Как добирался</h2>Я сам из Ярославля, а конференция проходила в Москве, соответственно добирался я на электричке (это ~3.5 часа). Регистрация начиналась в 10 утра. И как оказалось мой поезд приезжал в Москву только в 10:30. С помощью Яндекс.Метро проложил себе кратчайший маршрут по времени. Слегка потерявшись в комплексе гостиниц &#8220;Измайловская&#8221; нашел нужную и вот я уже у стойки регистрации.<br /><h2>Организация и доклады</h2>На стойке регистрации меня ждал сюрпиз -&nbsp;бэйдже&nbsp;участника с моим ФИО не нашли, поэтому мне&nbsp;написали на на чистом бэйдже (как я понял позже так делали всем кто был из mail.ru :)). Зато, как полагается, мне выдали &#8220;пляжную&#8221; сумочку с логотипом DevConf, в которой лежали рекламные буклеты, блокнотики, ручки и пара журналов и расписание докладов - все как полагается.<br />К сожалению, к первому докладу я не успевал, поэтому решил пойти выпить кофе, благо я вовремя успел к кофебрейку. Забегая вперед скажу, что за день я побывал на 6 докладах по javascript. Из них наверно половина показалась мне интересной и не заставила скучать. Порадовал доклад про профилирование и опмитизацию js. Круто когда докладчик приводит результаты своих исследований в цифрах на реальных примерах. Запомнился доклад представителя компании 2GIS, который рассказывал как они дружат C++ c JS и название его доклада не совсем соответствовал ожидаемому (такой &#8220;маркетинговый ход&#8221; как он впоследствии сам признался).<br />Что касается обеда, то он входил в стоимость одного дня конференции. Доклады в разных секциях заканчивались в разное время, возможно поэтому очередей в зале где проходил обед я не заметил. Обед представлял из себя шведский стол. Единственное, что мне показалось недостаточным - это кофе в ограниченных количествах. Видимо так организаторы беспокоились о здоровье разработчиков. Хотелось бы выпивать чашечку кофе/чаю в любое время на протяжении всей конференции, а не только во время кофебрейков.<br /><h2>Итог</h2><div>К сожалению, на после-пати побывать не удалось - торопился на поезд. В целом, впечатлениями от конференции остался доволен. Чувствовался профессионализм и опыт докладчиков. В следующем году надеюсь опять посетить эту конфу. Спасибо ребятам из <a href="http://badoo.com/">Badoo</a>, которые не только рассказали про свою компанию, но и делали подарки в виде ручек-стилусов, маек и прочих мелочей с атрибутикой компании. Аналогичные призы разыгрывали и другие партнеры конференции, но, по уже известным обстоятельствам, я не смог поучаствовать в их розыгрыше. По приезду домой мой кот похоже тоже оценил сумку DevConf :)</div><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-nsvdm7XSYNk/U7m5w1qDz0I/AAAAAAAABCk/2qZP-_D4mPM/s1600/GIzaou4Ntg4.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-nsvdm7XSYNk/U7m5w1qDz0I/AAAAAAAABCk/2qZP-_D4mPM/s1600/GIzaou4Ntg4.jpg" height="298" width="400" /></a></div><div><br /></div><div>Больше фото с конференции можно найти на <a href="https://www.flickr.com/photos/devconf">канале во flickr</a>.</div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Пишем расширение для браузера Google Chrome]]></title>
    <link href="http://alfilatov.com/blog/2014/06/27/google-chrome/"/>
    <updated>2014-06-27T00:00:00+00:00</updated>
    <id>http://alfilatov.com/blog/2014/06/27/google-chrome</id>
    <content type="html"><![CDATA[<div class='post'>
В интернете много сайтов на которых реализована возможность листать страницу вверх без помощи мыши или полосы прокрутки. Но в то же время еще есть сайты где такой реализации нет. &#8220;Почему бы не попробовать написать скрипт который бы добавлял такую кнопку на все сайты?&#8221; - подумал я и принялся за реализацию. Такие скрипты называются пользовательскими и имеют расширение *.user.js. Почитать к примеру можно на <a href="http://habrahabr.ru/post/129343/">хабре</a>. К сожалению без &#8220;подводных камней&#8221; не обходится. Существуют некоторые различия в реализации userjs под разные браузеры. Я остановлюсь на описании реализации нашего userJS как расширения для браузера Google Chrome.<br /><a name='more'></a><br /><h2>manifest.json</h2>Обязательным для расширения Google Chrome является файл <b>manifest.json</b> в котором описываются параметры, пути к внешним файлам (*.js, *.css и др.), поддержка версии и т.п. для расширения. Подробнее о файле можно почитать <a href="https://developer.chrome.com/extensions/manifest">тут</a>. В нашем случае файл manifest.json выглядит следующим образом:<br /><pre style="background: rgba(238,238,238,0.92); color: black;">{<br />    <span style="color: #009933;">"manifest_version"</span>: <span style="color: #0066ff;">2</span>,<br />    <span style="color: #009933;">"content_scripts"</span>: [ {<br />        <span style="color: #009933;">"exclude_globs"</span>:    [  ],<br />        <span style="color: #009933;">"include_globs"</span>:    [ <span style="color: #009933;">"*"</span> ],<br />        <span style="color: #009933;">"js"</span>:               [ <span style="color: #009933;">"jquery.js"</span>, <span style="color: #009933;">"backTopUserJS.user.js"</span> ],<br />        <span style="color: #009933;">"css"</span>:              [ <span style="color: #009933;">"css/style.css"</span> ],<br />        <span style="color: #009933;">"matches"</span>:          [   <span style="color: #009933;">"http://*/*"</span>,<br />                                <span style="color: #009933;">"https://*/*"</span><br />                            ],<br />        <span style="color: #009933;">"run_at"</span>: <span style="color: #009933;">"document_end"</span><br />    } ],<br />    <span style="color: #009933;">"converted_from_user_script"</span>: <span style="color: #9700cc;">true</span>,<br />    <span style="color: #009933;">"description"</span>:  <span style="color: #009933;">"Back top userscript extension for google chrome"</span>,<br />    <span style="color: #009933;">"name"</span>:         <span style="color: #009933;">"backTopUserJS"</span>,<br />    <span style="color: #009933;">"version"</span>:      <span style="color: #009933;">"1"</span><br />}<br /></pre><br />Для удобства мы используем js библиотеку JQuery которую положили рядом с файлом manifest.json и основным файлом скрипта (в нашем случае это <b>backTopUserJS.user.js</b>). Его содержимое следующее: <br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="color: #0066ff; font-style: italic;">// ==UserScript==</span><br /><span style="color: #0066ff; font-style: italic;">// @name backTopUserJS</span><br /><span style="color: #0066ff; font-style: italic;">// @author Aleksandr Filatov</span><br /><span style="color: #0066ff; font-style: italic;">// @license MIT</span><br /><span style="color: #0066ff; font-style: italic;">// @version 1.0</span><br /><span style="color: #0066ff; font-style: italic;">// ==/UserScript==</span><br /><br /><span style="font-weight: 700;">function</span> <span style="color: #ff8000;">main</span>() {<br />    <span style="font-weight: 700;">var</span> disp <span style="color: blue;">=</span> <span style="color: blue;">$</span>(<span style="color: #3333ff; font-weight: 700;">window</span>).scrollTop() <span style="color: blue;">&gt;</span> <span style="color: #0066ff;">400</span> ? <span style="color: #009933;">'block'</span> : <span style="color: #009933;">'none'</span>;<br />    <span style="font-weight: 700;">var</span> <span style="color: blue;">$</span>upButton <span style="color: blue;">=</span> <span style="color: blue;">$</span>(<span style="color: #009933;">'&lt;div class="up-button" title="Наверх" style="display:'</span> <span style="color: blue;">+</span> disp <span style="color: blue;">+</span> <span style="color: #009933;">'"&gt;Наверх&lt;/div&gt;'</span>);<br /><br />    <span style="color: blue;">$</span>(<span style="color: #3333ff; font-weight: 700;">document</span>).<span style="color: #3333ff; font-weight: 700;">find</span>(<span style="color: #009933;">'body'</span>).append(<span style="color: blue;">$</span>upButton);<br />    <span style="color: blue;">$</span>upButton.<span style="color: #3333ff; font-weight: 700;">click</span>(<span style="font-weight: 700;">function</span> () {<br />        <span style="color: blue;">$</span>(<span style="color: #009933;">'html, body'</span>).animate({ scrollTop: <span style="color: #0066ff;">0</span> }, <span style="color: #009933;">'slow'</span>);<br />    });<br /><br />    <span style="color: blue;">$</span>(<span style="color: #3333ff; font-weight: 700;">window</span>).<span style="color: #3333ff; font-weight: 700;">scroll</span>(<span style="font-weight: 700;">function</span> () {<br />        <span style="color: blue;">if</span> (<span style="color: blue;">$</span>(<span style="color: #3333ff; font-weight: 700;">window</span>).scrollTop() <span style="color: blue;">&gt;</span> <span style="color: #0066ff;">400</span>) <span style="color: blue;">$</span>upButton.fadeIn(<span style="color: #009933;">'slow'</span>);<br />        <span style="color: blue;">else</span> <span style="color: blue;">$</span>upButton.fadeOut(<span style="color: #009933;">'slow'</span>);<br />    });<br />};<br /><br /><span style="font-weight: 700;">var</span> script <span style="color: blue;">=</span> <span style="color: #3333ff; font-weight: 700;">document</span>.<span style="color: #3333ff; font-weight: 700;">createElement</span>(<span style="color: #009933;">'script'</span>);<br />script.<span style="color: #3333ff; font-weight: 700;">appendChild</span>(<span style="color: #3333ff; font-weight: 700;">document</span>.<span style="color: #3333ff; font-weight: 700;">createTextNode</span>(<span style="color: #009933;">'('</span><span style="color: blue;">+</span> main <span style="color: blue;">+</span><span style="color: #009933;">')();'</span>));<br />(<span style="color: #3333ff; font-weight: 700;">document</span>.<span style="color: #6782d3;">body</span> <span style="color: blue;">||</span> <span style="color: #3333ff; font-weight: 700;">document</span>.head <span style="color: blue;">||</span> <span style="color: #3333ff; font-weight: 700;">document</span>.<span style="color: #6782d3;">documentElement</span>).<span style="color: #3333ff; font-weight: 700;">appendChild</span>(script);<br /></pre><br />Думаю скрипт достаточно понятен, чтобы его подробно рассматривать. Пояснить стоит лишь последние 3 строчки. На самом деле это мелкий хак, который вставляет наш скрипт в код страницы сайта. Если кто-то из вас найдет способ лучше можете написать к комментах свои фиксы :)<br /><h2>Установка расширения в браузере</h2><div>В Google Chrome можно устанавливать пользовательские скрипты, аналогично другим браузерам, но поскольку Google печется о нашей с вами безопасности, то их приходится оборачивать в расширения для браузера. Разберем установку по шагам.</div><h3>Шаг 1.</h3><div>Создаем папку для нашего расширения например так C:\MyChromeExtensionUserJS</div><h3>Шаг 2.</h3><div>Для каждого расширения создаем свою директорию например в нашем случае назовем ее так C:\MyChromeExtensionUserJS\backTopUserJS&#46; Добавляем файлы расширения в эту директорию.</div><h3>Шаг 3.</h3><div>Заходим &#8220;О браузере Google Chrome&#8221; -&gt; вкладка &#8220;Расширения&#8221; или в адресной строке пишем chrome://extensions/</div><h3>Шаг 4.</h3><div>Ставим галочку &#8220;Режим разработчика&#8221;</div><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-bax0UMkP6dU/U60tEjgXiLI/AAAAAAAABCQ/MRKVYzCoHjc/s1600/qwerty.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-bax0UMkP6dU/U60tEjgXiLI/AAAAAAAABCQ/MRKVYzCoHjc/s1600/qwerty.png" height="84" width="640" /></a></div><br /><br /><br /><br /><br /><br /><br /><h3>Шаг 5.</h3><div>Нажимаем кнопку &#8220;Загрузить распакованное расширение&#8221; и выбираем директорию нашего расширения. Нажимаем &#8220;OK&#8221;.</div><h3>Шаг 6.</h3><div>Расширение установлено и готово к работе. Чтобы обновить расширения после того как вы внесли в него изменения достаточно просто нажать кнопку &#8220;Обновить расширение&#8221; или в режиме разработчика сочетание клавиш Ctrl+R.</div><div><h2>Итог</h2></div><div>Посмотреть исходники скрипта можно на <a href="https://github.com/greybax/backTopUserJS">github</a>. Скрипт не претендует на звание идеального, а служит лишь примером и толчком к написанию собственных пользовательских скриптов для Google Chrome.</div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Основы языка Javascript]]></title>
    <link href="http://alfilatov.com/blog/2014/06/13/javascript/"/>
    <updated>2014-06-13T00:00:00+00:00</updated>
    <id>http://alfilatov.com/blog/2014/06/13/javascript</id>
    <content type="html"><![CDATA[<div class='post'>
Статья посвящена в первую очередь изучающим Javascript. Некоторые из вещей могут показаться очевидными, но я надеюсь, что читатель найдет что-то интересное и для себя. Сам я прочитал достаточное количество статей в сети по этому языку. Но найти материал который бы кратко и просто излагал сущность языка я так и не нашел. Это меня вдохновило на написание собственной статьи.<br /><h2>Javascript - это:</h2><div><ul><li>Прототипированный язык программирования</li><li>С недавних пор не только Client-side технология, но и Server-side (Node.js)</li><li>Не Java :)</li><li>Однопоточный, но асинхронный язык</li></ul><h2><a name='more'></a>Объявление переменных</h2></div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> num;<br />num <span style="color: blue;">=</span> <span style="color: #0066ff;">100500</span>;<br /></pre><div><br />JS слабо типизированный язык, что демонстрирует следующий пример:<br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> text <span style="color: blue;">=</span> <span style="color: #009933;">'some text'</span>;<br />text <span style="color: blue;">=</span> <span style="color: #0066ff;">42</span>; <span style="color: #0066ff; font-style: italic;">// there is 42 now</span><br /></pre><br /><b>Важно:</b><br /><ul><li>Не забывайте ставить &#8216;;&#8217; в конце каждой строки</li><li>Всегда используйте <b>var </b>при объявлении переменных.</li></ul><div><h3>Типы данных</h3></div><h4>Простые</h4><div><ul><li>Number</li><li>String</li><li>Boolean</li><li>Undefined</li><li>Null</li></ul><h4>Ссылочные</h4></div><div><ul><li>Object</li></ul><div>Разберем каждый тип подробнее:</div></div><h4>Number</h4><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> num <span style="color: blue;">=</span> <span style="color: #0066ff;">100500</span>;<span style="color: #0066ff; font-style: italic;"> // this is a number type</span><br />num <span style="color: blue;">=</span> <span style="color: #0066ff;">0.0009</span>;<span style="color: #0066ff; font-style: italic;"> // this is a number type</span><br /></pre></div><br />Доступны все стандартные числовые операции:&nbsp;+, - , *, /, %, ++, &#8211; <br /><br /><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> thisIsInfinity <span style="color: blue;">=</span> <span style="color: #0066ff;">999/0</span>;<span style="color: #0066ff; font-style: italic;"> // Infinity</span><br /><span style="font-weight: 700;">var</span> thisIsNaN <span style="color: blue;">=</span> <span style="color: #0066ff;">"this is not number" * 3</span>;<span style="color: #0066ff; font-style: italic;"> // NaN</span><br /></pre></div><h4>String</h4></div><div>Пример использования кавычек:</div><div><br /></div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> fooString <span style="color: blue;">=</span> "I say: 'Yeah<span style="color: blue;">!</span>' It's cool.";<br />fooString <span style="color: blue;">=</span> 'He said: "Yeah<span style="color: blue;">!</span>"’;<br /></pre><br />Конкатенация строк:<br /><br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> text <span style="color: blue;">=</span> “a” <span style="color: blue;">+</span> “b”; <span style="color: #0066ff; font-style: italic;">// text has value ‘ab’</span><br /></pre><br />Другие полезные методы:<br /><ul><li>charAt()</li><li>indexOf()</li><li>slice()</li><li>toLowerCase()</li><li>toUpperCase()</li></ul><h4>Boolean, undefined and null</h4><div><b>1. Boolean </b>(true/false):<br /><br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> thisIsTrue <span style="color: blue;">=</span> <span style="color: #9700cc;">true</span>;<br /></pre><br /><b>2. Undefined </b>- специальный тип, который означает, что переменная не определена.<br /><br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> foo; <span style="color: #0066ff; font-style: italic;">// It is ‘undefined’</span><br /></pre></div><br /><b>3. Null</b> - специальный тип, означает &#8220;ничего&#8221;.<br /><br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> bar <span style="color: blue;">=</span> <span style="color: #9700cc;">null</span>;<br /></pre><h3>Объекты в Javascript</h3></div><div>Объекты в JS это стандартные ассоциативные массивы, другими словами &#8220;хэш&#8221;.<br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> obj <span style="color: blue;">=</span> {<br />    name: <span style="color: #009933;">"John"</span>,<br />    lastname: <span style="color: #009933;">"Johnson"</span><br />}<br /></pre><br />Ассоциативный массив - абстрактный тип данных состоят из набора из пар &lt;ключ&gt;: &lt;значение&gt;. <br /><h4>Создание объектов</h4></div><div>Оба этих метода эквивалентны:<br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="color: #0066ff; font-style: italic;">// simple creating</span><br /><span style="font-weight: 700;">var</span> obj <span style="color: blue;">=</span> {};<br /> <br /><span style="color: #0066ff; font-style: italic;">// standard syntax</span><br /><span style="font-weight: 700;">var</span> obj <span style="color: blue;">=</span> <span style="color: blue;">new</span> Object();<br /></pre><br />Литеральный синтаксис: <br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="color: #0066ff; font-style: italic;">//creation with properties</span><br /><span style="font-weight: 700;">var</span> obj <span style="color: blue;">=</span> {<br />    name: “John”,<br />    lastName: “Johnson”<br />}<br /></pre><h3>Операции с объектами</h3><pre style="background: rgba(238,238,238,0.92); color: black;">o.<span style="color: #6782d3;">name</span> <span style="color: blue;">=</span> “John”; <span style="color: #0066ff; font-style: italic;">//add property</span><br />o[“lastName”] <span style="color: blue;">=</span> “Johnson”;<br /><br /><span style="color: #3333ff; font-weight: 700;">alert</span>(o.<span style="color: #6782d3;">name</span>); <span style="color: #0066ff; font-style: italic;">//get property</span><br /><span style="color: #3333ff; font-weight: 700;">alert</span>(o[“lastName”]);<br /><br /><span style="color: blue;">delete</span> o.<span style="color: #6782d3;">name</span>; <span style="color: #0066ff; font-style: italic;">//delete property</span><br /></pre><h4>Оператор &#8216;in&#8217;</h4></div><div><pre style="background: rgba(238,238,238,0.92); color: black;">obj <span style="color: blue;">=</span> <span style="color: blue;">new</span> Object();<br />obj.prop <span style="color: blue;">=</span> <span style="color: #009933;">'exists'</span>;<br /><span style="color: #009933;">'prop'</span> <span style="color: blue;">in</span> obj; <span style="color: #0066ff; font-style: italic;">// returns true</span><br /><span style="color: #009933;">'toString'</span> <span style="color: blue;">in</span> obj; <span style="color: #0066ff; font-style: italic;">// returns true</span><br /></pre><h4>hasOwnProperty  </h4></div><div><pre style="background: rgba(238,238,238,0.92); color: black;">obj <span style="color: blue;">=</span> <span style="color: blue;">new</span> Object();<br />obj.prop <span style="color: blue;">=</span> <span style="color: #009933;">'exists'</span>;<br />obj.hasOwnProperty(<span style="color: #009933;">'prop'</span>); <span style="color: #0066ff; font-style: italic;">// returns true</span><br />obj.hasOwnProperty(<span style="color: #009933;">'toString'</span>); <span style="color: #0066ff; font-style: italic;">// returns false</span><br /></pre><br />В отличие от оператора in, метод hasOwnProperty не проверяет по объекту цепочку прототипов. <br /><h4>=== undefined</h4></div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> obj <span style="color: blue;">=</span> {};<br /><span style="color: #0066ff; font-style: italic;">// add property with undefined value </span><br />obj.test <span style="color: blue;">=</span> <span style="color: #9700cc;">undefined</span>; <br /><span style="color: #3333ff; font-weight: 700;">alert</span>(obj.test <span style="color: blue;">===</span> <span style="color: #9700cc;">undefined</span>); <span style="color: #0066ff; font-style: italic;">// true</span><br /><span style="color: #3333ff; font-weight: 700;">alert</span>(obj.test2 <span style="color: blue;">===</span> <span style="color: #9700cc;">undefined</span>); <span style="color: #0066ff; font-style: italic;">// true</span><br /></pre><br />Вполне возможна ситуация, что свойство существует и является равно undefined <br /><h3>Преобразование типов</h3></div><div><h4>String</h4></div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> str1 <span style="color: blue;">=</span> <span style="color: #3333ff; font-weight: 700;">String</span>(<span style="color: #0066ff;">1</span>);  <span style="color: #0066ff; font-style: italic;">// string '1'</span><br /><span style="font-weight: 700;">var</span> str2 <span style="color: blue;">=</span> <span style="color: #009933;">''</span> <span style="color: blue;">+</span> <span style="color: #0066ff;">1</span>;     <span style="color: #0066ff; font-style: italic;">// string '1'</span><br /></pre><h4>Numerical</h4></div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> num1 <span style="color: blue;">=</span> <span style="color: #3333ff; font-weight: 700;">Number</span>(<span style="color: #009933;">'42'</span>);   <span style="color: #0066ff; font-style: italic;">//number 42</span><br /><span style="font-weight: 700;">var</span> num2 <span style="color: blue;">=</span> <span style="color: blue;">+</span><span style="color: #009933;">"42"</span>;          <span style="color: #0066ff; font-style: italic;">//number 42</span><br /></pre><h4>Boolean</h4></div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> bool1 <span style="color: blue;">=</span> <span style="color: #3333ff; font-weight: 700;">Boolean</span>(<span style="color: #9700cc;">null</span>);   <span style="color: #0066ff; font-style: italic;">//false</span><br /><span style="font-weight: 700;">var</span> bool2 <span style="color: blue;">=</span> <span style="color: blue;">!</span><span style="color: blue;">!</span><span style="color: #9700cc;">null</span>;          <span style="color: #0066ff; font-style: italic;">//false</span><br /></pre><h3>Операторы сравнения </h3></div><div>Приведение типов используется в операторах: &lt;,&gt;,&lt;=,=&gt;,==,!= </div><div>Приведение типов НЕ используется в операторах: ===, !== </div><div>Советую использовать для более наглядного сравнения равенства/неравенства операторы === и !== соответственно.<br /><br />Примеры для демонстрации:<br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="color: #009933;">""</span> <span style="color: blue;">==</span> <span style="color: #009933;">"0"</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #0066ff;">0</span> <span style="color: blue;">==</span> <span style="color: #009933;">""</span> <span style="color: #0066ff; font-style: italic;">// true</span><br /><span style="color: #0066ff;">0</span> <span style="color: blue;">==</span> <span style="color: #009933;">"0"</span> <span style="color: #0066ff; font-style: italic;">// true</span><br /><span style="color: #9700cc;">false</span> <span style="color: blue;">==</span> <span style="color: #009933;">"false"</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #9700cc;">false</span> <span style="color: blue;">==</span> <span style="color: #009933;">"0"</span> <span style="color: #0066ff; font-style: italic;">// true</span><br /><span style="color: #9700cc;">false</span> <span style="color: blue;">==</span> <span style="color: #9700cc;">undefined</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #9700cc;">false</span> <span style="color: blue;">==</span> <span style="color: #9700cc;">null</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #9700cc;">null</span> <span style="color: blue;">==</span> <span style="color: #9700cc;">undefined</span> <span style="color: #0066ff; font-style: italic;">// true</span><br /><span style="color: #009933;">"<span style="color: #6782d3;">\t</span><span style="color: #6782d3;">\r</span><span style="color: #6782d3;">\n</span>"</span> <span style="color: blue;">==</span> <span style="color: #0066ff;">0</span> <span style="color: #0066ff; font-style: italic;">// true</span><br /></pre><br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="color: #009933;">""</span> <span style="color: blue;">===</span> <span style="color: #009933;">"0"</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #0066ff;">0</span> <span style="color: blue;">===</span> <span style="color: #009933;">""</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #0066ff;">0</span> <span style="color: blue;">===</span> <span style="color: #009933;">"0"</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #9700cc;">false</span> <span style="color: blue;">===</span> <span style="color: #009933;">"false"</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #9700cc;">false</span> <span style="color: blue;">===</span> <span style="color: #009933;">"0"</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #9700cc;">false</span> <span style="color: blue;">===</span> <span style="color: #9700cc;">undefined</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #9700cc;">false</span> <span style="color: blue;">===</span> <span style="color: #9700cc;">null</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #9700cc;">null</span> <span style="color: blue;">===</span> <span style="color: #9700cc;">undefined</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /><span style="color: #009933;">"<span style="color: #6782d3;">\t</span><span style="color: #6782d3;">\r</span><span style="color: #6782d3;">\n</span>"</span> <span style="color: blue;">===</span> <span style="color: #0066ff;">0</span> <span style="color: #0066ff; font-style: italic;">// false</span><br /></pre><h3>Массивы </h3></div><div>Одно из важных и отличительных свойств массивов в Javascript является то, что массивы могут содержать переменные разных типов.</div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> emptyArray <span style="color: blue;">=</span> [ ];<br /><span style="font-weight: 700;">var</span> numberArrray <span style="color: blue;">=</span> [<span style="color: #0066ff;">1</span>, <span style="color: #0066ff;">2</span>, <span style="color: #0066ff;">3</span>]; <br /><span style="font-weight: 700;">var</span> myCollection <span style="color: blue;">=</span> [<span style="color: #0066ff;">1</span>, <span style="color: #009933;">'string'</span>, <span style="color: #9700cc;">true</span>]; <br />myCollection[<span style="color: #0066ff;">0</span>]; <span style="color: #0066ff; font-style: italic;">// Return 1</span><br /></pre><br />Некоторые полезные функции работы с массивами:<br /><ul><li>push/pop</li><li>shift/unshift</li><li>splice</li><li>join/split</li><li>sort</li><li>reverse</li><li>concat</li><li>indexOf/lastIndexOf</li></ul><div>Особое внимание хочется уделить свойстве <b>length </b>массива.</div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> myArray <span style="color: blue;">=</span> [<span style="color: #0066ff;">1</span>, <span style="color: #0066ff;">2</span>, <span style="color: #0066ff;">3</span>]; <br />myArray.<span style="color: #6782d3;">length</span>; <span style="color: #0066ff; font-style: italic;">// It is 3</span><br />myArray.<span style="color: #6782d3;">length</span> <span style="color: blue;">=</span> <span style="color: #0066ff;">4</span>; <br />myArray.<span style="color: #6782d3;">length</span> <span style="color: blue;">=</span> <span style="color: #0066ff;">2</span>; <span style="color: #0066ff; font-style: italic;">// [1, 2]</span><br />myArray[<span style="color: #0066ff;">1000000</span>] <span style="color: blue;">=</span> <span style="color: #0066ff;">4</span>;<br /></pre>Таким образом <b>length = последний индекс массива + 1</b>. Если часть элементов массива не будут инициализированы, то они будут равны undefined. <br /><h3>Функции</h3></div><div>Функции это объекты в Javascript. Поэтому их можно присваивать переменным, передавать и, конечно, у них есть свойства. Существует 3 способа создать функцию. Основное отличие в результате их работы - в том, что именованная функция видна везде, а анонимная - только после объявления.</div><h4>Именнованные</h4><div><pre style="background: rgba(238,238,238,0.92); color: black;">sayAnithing(“Hi<span style="color: blue;">!</span>”);<br /><span style="font-weight: 700;">function</span> <span style="color: #ff8000;">sayAnithing</span>(message) { <span style="color: #3333ff; font-weight: 700;">alert</span>(mesage); }<br /></pre></div><h4>Анонимные</h4><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> <span style="color: #ff8000;">sayBonjour</span> <span style="color: blue;">=</span> <span style="font-weight: 700;">function</span> () { <span style="color: #3333ff; font-weight: 700;">alert</span>(“Bonjour<span style="color: blue;">!</span>”);}<br />sayBonjour(); <span style="color: #0066ff; font-style: italic;">// Says “Bonjour!” </span><br /></pre><h4>Аргументы функции</h4></div><div>Функции можно запускать с любым числом параметров. Если функции передано меньше параметров, чем есть в определении, то отсутствующие считаются undefined.</div><div><pre style="background: rgba(238,238,238,0.92); color: black;">foo(<span style="color: #0066ff;">0</span>, <span style="color: #0066ff;">1</span>, <span style="color: #0066ff;">2</span>, <span style="color: #0066ff;">3</span>, <span style="color: #0066ff;">4</span>); <br /><br /><span style="font-weight: 700;">function</span> <span style="color: #ff8000;">foo</span>(a, b, c) { <br />    arguments[<span style="color: #0066ff;">0</span>] <span style="color: blue;">=</span> <span style="color: #0066ff;">2</span>; <br />    a; <span style="color: #0066ff; font-style: italic;">// 2 </span><br />    b <span style="color: blue;">=</span> <span style="color: #0066ff;">17</span>; <br />    arguments[<span style="color: #0066ff;">1</span>]; <span style="color: #0066ff; font-style: italic;">// 17 </span><br />    arguments[<span style="color: #0066ff;">4</span>]; <span style="color: #0066ff; font-style: italic;">// 4 </span><br />}<br /></pre>Аргументы можно изменять.<br />Одной из любопытных функций является <b>typeof() - которая возвращает тип переменной.</b><br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="color: blue;">typeof</span> <span style="color: #9700cc;">undefined</span> <span style="color: #0066ff; font-style: italic;">// "undefined" </span><br /><span style="color: blue;">typeof</span> <span style="color: #0066ff;">0</span>    <span style="color: #0066ff; font-style: italic;">// "number" </span><br /><span style="color: blue;">typeof</span> <span style="color: #9700cc;">true</span> <span style="color: #0066ff; font-style: italic;">// "boolean" </span><br /><span style="color: blue;">typeof</span> <span style="color: #009933;">"foo"</span> <span style="color: #0066ff; font-style: italic;">// "string" </span><br /><span style="color: blue;">typeof</span> {} <span style="color: #0066ff; font-style: italic;">// "object"</span><br /></pre>Специфика языка Javascript: <br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="color: blue;">typeof</span> <span style="color: #9700cc;">null</span>  <span style="color: #0066ff; font-style: italic;">// "object"</span><br /><span style="color: blue;">typeof</span> <span style="font-weight: 700;">function</span>(){} <span style="color: #0066ff; font-style: italic;">// "function"</span><br /></pre><h3>Scope и контекст выполнения</h3></div><div>Выполнение JavaScript представляет из себя стэк контекстов выполнения. Контекст, который активирует другой контекст, называется вызывающим контекстом (<b>caller</b>). Контекст, который вызывают, называется вызываемым контекстом (<b>callee</b>). При этом callee-контекст может являться caller’ом для другого callee, что частенько и происходит когда один из одной функции вызывается другая. <br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> color <span style="color: blue;">=</span> “blue”; <span style="color: #0066ff; font-style: italic;">// Global scope</span><br /><span style="font-weight: 700;">function</span> <span style="color: #ff8000;">changeColor</span> () { <span style="color: #0066ff; font-style: italic;">// changeColor scope</span><br />  <span style="font-weight: 700;">var</span> anotherColor <span style="color: blue;">=</span> “red”;<br />    <span style="font-weight: 700;">function</span> <span style="color: #ff8000;">swapColors</span> () { <span style="color: #0066ff; font-style: italic;">// swapColors scope</span><br />      <span style="font-weight: 700;">var</span> tempColor <span style="color: blue;">=</span> anotherColor;<br />      anotherColor <span style="color: blue;">=</span> color;<br />      color <span style="color: blue;">=</span> tempColor;<br />    }<br />    swapColors();  <span style="color: #0066ff; font-style: italic;">// function call</span><br />}<br />changeColor();  <span style="color: #0066ff; font-style: italic;">// function call</span><br /></pre><br />Схема ниже иллюстрирует контекст выполнения функций:  <br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-JkQD5nm6wtI/U5rkqe9m1_I/AAAAAAAABBY/JsYrX9EW0u8/s1600/2014-06-13+15-43-51+%D0%A1%D0%BA%D1%80%D0%B8%D0%BD%D1%88%D0%BE%D1%82+%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-JkQD5nm6wtI/U5rkqe9m1_I/AAAAAAAABBY/JsYrX9EW0u8/s1600/2014-06-13+15-43-51+%D0%A1%D0%BA%D1%80%D0%B8%D0%BD%D1%88%D0%BE%D1%82+%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0.png" /></a></div>Переменные видны внутри контекста функции не зависимо где они объявлены. Необычно для новичков в JS выглядит следующий пример: <br /><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">function</span> <span style="color: #ff8000;">myFunc</span> () {<br />  If (<span style="color: #9700cc;">true</span>) {<br />    <span style="font-weight: 700;">var</span> localVar <span style="color: blue;">=</span> “I’m local”;<br />  }<br />  console<span style="color: #3333ff; font-weight: 700;">.log</span>(localVar);  <span style="color: #0066ff; font-style: italic;">//Shows “I’m local” in log</span><br />}<br /></pre><h3>Замыкания </h3></div><div>Замыкание - внутренняя функция. Javascript позволяет создавать функции по ходу выполнения скрипта. И эти функции имеют доступ к переменным внешней функции.</div><div>Рассмотрим пример:</div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">function</span> <span style="color: #ff8000;">Counter</span> () {<br />  <span style="font-weight: 700;">var</span> count <span style="color: blue;">=</span> <span style="color: #0066ff;">0</span>;<br />  <span style="color: blue;">return</span> <span style="font-weight: 700;">function</span> () {<br />    <span style="color: blue;">return</span> <span style="color: blue;">++</span>count;<br />  }<br />}<br /><span style="font-weight: 700;">var</span> increaseCount <span style="color: blue;">=</span> Counter();<br /><span style="color: #3333ff; font-weight: 700;">alert</span>(increaseCount()); <span style="color: #0066ff; font-style: italic;">// Shows 1</span><br /><span style="color: #3333ff; font-weight: 700;">alert</span>(increaseCount()); <span style="color: #0066ff; font-style: italic;">// Shows 2</span><br /></pre>Внутренняя анонимная функция замыкает на себе функцию Counter. Это означает что когда заканчивает работать функция Counter, внутренняя функция остается жить, ее можно запускать в другом месте кода. В этой функции мы используем переменную count, т.е получается что внутренняя функция замыкает на себе переменную count внешней функции. <br /><h3>Прототипы</h3></div><div>В Javascript все объекты наследуют Object, поэтому каждый объект имеет&nbsp;<span style="background-color: white; font-family: verdana, geneva, lucida, 'lucida grande', arial, helvetica, sans-serif; font-size: 13px;">свойство</span><span style="background-color: white; font-family: verdana, geneva, lucida, 'lucida grande', arial, helvetica, sans-serif; font-size: 13px;">&nbsp;</span>prototype. Prototype это объект, которое позволяет шарить свойства с другими объектами.&nbsp;</div><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-aE93elcAvL4/U5sBdhK_YUI/AAAAAAAABBo/SWEMu8srCJc/s1600/2014-06-13+17-49-12+%D0%A1%D0%BA%D1%80%D0%B8%D0%BD%D1%88%D0%BE%D1%82+%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-aE93elcAvL4/U5sBdhK_YUI/AAAAAAAABBo/SWEMu8srCJc/s1600/2014-06-13+17-49-12+%D0%A1%D0%BA%D1%80%D0%B8%D0%BD%D1%88%D0%BE%D1%82+%D1%8D%D0%BA%D1%80%D0%B0%D0%BD%D0%B0.png" /></a></div><div>Например, когда у объекта свойство &#8220;jump&#8221;, то интерпретатор языка ищет сначала это свойство у самого объекта, а потом спускаясь по цепочке прототипов ищет в них пока не найдет.</div><h3>&#8220;Классы&#8221;</h3><div>В спецификации ECMAScript 5 нет понятия класса. Реализовать класс в привычном понятии для ООП можно путем создания конструктора с прототипом. Принадлежность к классу проверяет оператор <b>instanceof</b></div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">function</span> <span style="color: #ff8000;">Animal</span>(name) {  <span style="color: #0066ff; font-style: italic;">//constructor</span><br />  this.<span style="color: #6782d3;">name</span> <span style="color: blue;">=</span> name;<br />}<br /><br /><span style="color: #3333ff; font-weight: 700;">Animal</span>.<span style="color: #6782d3;">prototype</span>.<span style="color: #ff8000;">speed</span> <span style="color: blue;">=</span> <span style="color: #0066ff;">0</span>;  <span style="color: #0066ff; font-style: italic;">//Property with value by default</span><br /><br /><span style="color: #3333ff; font-weight: 700;">Animal</span>.<span style="color: #6782d3;">prototype</span>.<span style="color: #ff8000;">run</span> <span style="color: blue;">=</span> <span style="font-weight: 700;">function</span>(speed) { <span style="color: #0066ff; font-style: italic;">//Method of prototype</span><br />  this.speed <span style="color: blue;">+</span><span style="color: blue;">=</span> speed;<br />  <span style="color: #3333ff; font-weight: 700;">alert</span>(this.<span style="color: #6782d3;">name</span> <span style="color: blue;">+</span> <span style="color: #009933;">' run, speed'</span> <span style="color: blue;">+</span> this.speed);<br />};<br /></pre><h3>this</h3></div><div>this зависит от контекста вызова. Рассмотрим возможные варианты:</div><h4>this в простом вызове</h4><div>В этом случае this глобальный объект</div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">function</span> <span style="color: #ff8000;">simpleFunction</span> () {<br />  this;<br />}<br /><br />simpleFunction();<br /></pre><h4>this в конструкторе </h4></div><div>В этом случае this - новый объект</div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">function</span> <span style="color: #ff8000;">SimpleConstructor</span> () {<br />  this.someProperty <span style="color: blue;">=</span> “This is some property“;<br />}<br /><br /><span style="font-weight: 700;">var</span> someObject <span style="color: blue;">=</span> <span style="color: blue;">new</span> SimpleConstructor();<br /></pre><h4>this в методе объекта </h4></div><div>В данном примере this это объект country</div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">var</span> country <span style="color: blue;">=</span> {<br />  name: “Sparta”<br />}<br /><br /><span style="font-weight: 700;">var</span> <span style="color: #ff8000;">say</span> <span style="color: blue;">=</span> <span style="font-weight: 700;">function</span> () {<br />  <span style="color: #3333ff; font-weight: 700;">alert</span>(“This is “ <span style="color: blue;">+</span> this.<span style="color: #6782d3;">name</span>);<br />}<br /><br />country.sayName <span style="color: blue;">=</span> say;<br />country.sayName();<br /></pre><h4>this как первый аргумент в call/apply </h4></div><div><pre style="background: rgba(238,238,238,0.92); color: black;"><span style="font-weight: 700;">function</span> <span style="color: #ff8000;">sum</span>(a, b) {<br />  this.result <span style="color: blue;">=</span> a <span style="color: blue;">+</span> b;<br />}<br /><span style="font-weight: 700;">var</span> obj <span style="color: blue;">=</span> {};<br /><br />sum.<span style="color: #3333ff; font-weight: 700;">call</span>(obj, <span style="color: #0066ff;">1</span>, <span style="color: #0066ff;">2</span>);<br /><span style="color: #0066ff; font-style: italic;">// sum.apply(obj, [1, 2]);</span><br /><br /><span style="color: #3333ff; font-weight: 700;">alert</span>(obj.result) <span style="color: #0066ff; font-style: italic;">// Property was created. Result is 3</span><br /></pre><h3>Наследование </h3></div><div>В JS в отличие от других языков программирования реализация наследования как одного из принципов ООП, может быть реализовано несколькими способами. Думаю в данной статье будет излишне описывать каждый из способов, подробно о них можно прочитать в книге:&nbsp;<b>&#8220;Professional JavaScript for Web Developers&#8221;, N. Zakas.</b></div><div><ul><li>Prototype Chaining</li><li>Object Masquerading inheritance</li><li>Combination Inheritance</li><li>Prototypal Inheritance</li><li>Parasitic Inheritance</li><li>Parasitic Combination Inheritance</li></ul><div><h3>Литература</h3></div></div><div><div><ul><li><a href="http://www.ecmascript.org/">http://www.ecmascript.org/</a></li><li><a href="http://javascript.ru/">http://javascript.ru/</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide</a></li><li>Larry Ulman “Modern JavaScript Develop and Design”</li><li>David Flanagan “JavaScript: The Definitive Guide”</li><li>Nicholas C. Zakas “Professional JavaScript for Web Developers”</li></ul></div></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASP.NET: События жизненного цикла страницы]]></title>
    <link href="http://alfilatov.com/blog/2014/05/12/aspnet/"/>
    <updated>2014-05-12T00:00:00+00:00</updated>
    <id>http://alfilatov.com/blog/2014/05/12/aspnet</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div style="text-align: left;"><span style="font-family: inherit;">Эта статья является продолжением статьи&nbsp;<a href="http://greybax.blogspot.ru/2014/04/aspnet.html" style="color: #3778cd;">ASP.NET: Этапы жизненного цикла страницы</a>. Сейчас я хочу более подробно рассказать о событийной модели в ASP.NET.&nbsp;<span style="line-height: 19.9999942779541px; text-align: justify;">Во время прохождения этапов жизненного цикла возникают события, подписавшись на которые, разработчик может выполнять свой собственный код. Зачастую, многие начинающие разработчики, путают порядок событий в asp.net приложении. Проверить trace загрузки страницы достаточно просто:</span></span></div><ul style="text-align: left;"><li><span style="font-family: inherit;">Создадим простое ASP.NET Web Forms Application в студии</span></li><li><span style="font-family: inherit;">Добавляем атрибуты Trace и TraceMode директивы&nbsp;@Page и устанавливаем значения &#8216;true&#8217; и &#8216;SortByName&#8217; соответственно.</span></li></ul><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-t8kJhuvsFzY/U2dzRQx22fI/AAAAAAAABA4/joxV8eAvuIE/s1600/Untitled.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em; text-align: center;"><span style="font-family: inherit;"><img border="0" src="http://2.bp.blogspot.com/-t8kJhuvsFzY/U2dzRQx22fI/AAAAAAAABA4/joxV8eAvuIE/s1600/Untitled.png" height="74" width="640" /></span></a><a href="http://2.bp.blogspot.com/-t8kJhuvsFzY/U2dzRQx22fI/AAAAAAAABA4/joxV8eAvuIE/s1600/Untitled.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em; text-align: center;"><span style="font-family: inherit;"><br /></span></a></div><span style="font-family: inherit;"><br /><br /><br /><br /><br /></span><br /><ul style="text-align: left;"><li><span style="font-family: inherit;">Запускаем наш сайт (нажимаем F5 в студии)</span></li><li><span style="font-family: inherit;">Прямо в окне браузера вместе с сайтом загрузилась информации трассировки.</span></li></ul><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-6tgWMi1IZHk/U2d3K3cYC7I/AAAAAAAABBE/vDJc1nhg8FU/s1600/22.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><span style="font-family: inherit;"><img border="0" src="http://4.bp.blogspot.com/-6tgWMi1IZHk/U2d3K3cYC7I/AAAAAAAABBE/vDJc1nhg8FU/s1600/22.png" height="296" width="640" /></span></a></div><div class="separator" style="clear: both; text-align: center;"></div><div style="text-align: left;"><br /><a name='more'></a>Во время трассировки не выводится событие&nbsp;<b style="line-height: 19.9999942779541px; text-align: justify;">Unload</b><span style="background-color: white; font-family: inherit; line-height: 16px;">, потому что оно происходит, когда весь код уже выведен.&nbsp;</span><span style="font-family: inherit; line-height: 19.9999942779541px; text-align: justify;">Из всех событий жизненного цикла страницы, разработчик может подписаться только на пять, помимо событий дочерних элементов управления. Эти события: <b>PreInit, Init, Load, PreRender, Unload</b>.&nbsp;</span><span style="line-height: 22.857135772705078px; text-align: justify;">Во время любого события можно использовать свойство IsPostBack, для того, чтобы определить вызвана ли эта страница в первый раз или в результате postback.&nbsp;</span><span style="font-family: inherit; line-height: 19.9999942779541px; text-align: justify;">Рассмотрим варианты использования этих событий.</span></div><div style="text-align: left;"><span style="font-family: inherit; line-height: 19.9999942779541px; text-align: justify;"><br /></span></div><table border="0" cellpadding="5" cellspacing="2" style="line-height: 1.428571em; width: 568px;"><tbody style="line-height: 1.428571em;"><tr style="line-height: 1.428571em;"><th colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: inherit;">Событие</span></th><th colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: inherit;">Использование</span></th></tr><tr style="line-height: 1.428571em;"><td align="center" colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><strong style="line-height: 1.428571em;"><span style="font-family: inherit;">PreInit</span></strong></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><div align="justify" style="border: 0px; line-height: 1.428571em; margin-bottom: 0.714285em; padding: 0px;"><span style="line-height: 1.428571em; text-align: left;">На данном этапе элементы управления еще не созданы и равны null. Здесь разработчик может создать динамически элементы управления, динамически устанавливать шаблон дизайна или тему оформления, считывать или устанавливать свойства объекта Profile.</span></div></td></tr><tr style="line-height: 1.428571em;"><td align="center" colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><strong style="line-height: 1.428571em;"><span style="font-family: inherit;">Init</span></strong></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;">Здесь происходит начальная инициализация контролов, значения берутся из aspx файла. Tracking ViewState еще отключен.<span style="line-height: 1.428571em;">&nbsp;В случае, если разработчик самостоятельно установит свойства на этом этапе, то на следующем установленные значения могут быть изменены</span><span style="font-family: inherit; line-height: 1.428571em;">. На этом этапе разработчик может считывать или инициализировать свойства элементов управления.</span></td></tr><tr style="line-height: 1.428571em;"><td align="center" colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><strong style="line-height: 1.428571em;"><span style="font-family: inherit;">Load</span></strong></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: inherit;">Загружаются данные из ресурсов. Если произошел Postback, элементы управления получают значения, которые были отправлены с формы. На этом этапе разработчик может считывать или изменять свойства элементов управления.&nbsp;</span></td></tr><tr style="line-height: 1.428571em;"><td align="center" colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><strong style="line-height: 1.428571em;"><span style="font-family: inherit;">PreRender</span></strong></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: inherit;">Последняя возможность внести изменения во внешний вид страницы.</span></td></tr><tr style="line-height: 1.428571em;"><td align="center" colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><strong style="line-height: 1.428571em;"><span style="font-family: inherit;">Unload</span></strong></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: inherit;">Освобождение занятых ресурсов (закрытие открытых соединений с базой данных, завершение работы с файлами и т.п.)&nbsp;<span style="line-height: 1.428571em;">Важно, что на этом этапе уже создано HTML представление страницы и попытка внести какие-либо изменения (например, вызвав метод Response.Write()), приведет к исключению. Если на данном этапе изменить знамения элементов управления, они не попадут конечному пользователю.</span></span></td></tr></tbody></table><h4><span style="font-family: inherit;">Пример</span></h4><script src="https://gist.github.com/greybax/d4147fb046cf9b3cf7d3.js"></script> <br /><div class="separator" style="clear: both; text-align: center;"></div>Результат работы скрипта приведен в таблице ниже.<br /><table border="1"><tbody><tr> <td align="center" rowspan="3">Событие</td> <td align="center" colspan="8">IsPostBack</td></tr><tr> <td align="center" colspan="4">До</td> <td align="center" colspan="4">После</td></tr><tr> <td>Tracking ViewState</td> <td>TextBox (на момент входа в функцию)</td> <td>TextBox  (на момент выхода из функции)</td> <td>Response.<br />Write</td> <td>Tracking ViewState</td> <td>TextBox (на момент входа в функцию)</td> <td>TextBox (на момент выхода из функции)</td> <td>Response.<br />Write</td></tr><tr><td><b>OnPreInit</b></td><td>False</td><td>null</td><td>null</td><td>OnPreInit</td><td>False</td><td>null</td><td>null</td><td>OnPreInit</td></tr><tr><td><b>OnInit</b></td><td>False</td><td>Sample text</td><td>Sample text OnInit</td><td>OnInit</td><td>False</td><td>Sample text</td><td>Sample text OnInit</td><td>OnInit</td></tr><tr><td><b>OnPreLoad</b></td><td>True</td><td>Sample text OnInit</td><td>Sample text OnInit  OnPreLoad</td><td>OnPreLoad</td><td>True</td><td>Sample text OnInit  OnPreLoad  OnPreRender</td><td>Sample text OnInit  OnPreLoad  OnPreRender  OnPreLoad</td><td>OnPreLoad</td></tr><tr><td><b>OnPreRender</b></td><td>True</td><td>Sample text OnInit  OnPreLoad</td><td>Sample text OnInit  OnPreLoad  OnPreRender</td><td>OnPreRender</td><td>True</td><td>Sample text OnInit  OnPreLoad  OnPreRender  OnPreLoad</td><td>Sample text OnInit  OnPreLoad  OnPreRender  OnPreLoad  OnPreRender</td><td>OnPreRender</td></tr><tr><td><b>OnUnload</b></td><td>True</td><td>Sample text OnInit  OnPreLoad  OnPreRender</td><td>Sample text OnInit  OnPreLoad  OnPreRender  OnUnload</td><td>Error</td><td>True</td><td>Sample text OnInit  OnPreLoad  OnPreRender  OnPreLoad  OnPreRender</td><td>Sample text OnInit  OnPreLoad  OnPreRender  OnPreLoad  OnPreRender  OnUnload</td><td>Error</td></tr></tbody></table><br /><div><br /></div></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASP.NET: Этапы жизненного цикла страницы]]></title>
    <link href="http://alfilatov.com/blog/2014/04/23/aspnet/"/>
    <updated>2014-04-23T00:00:00+00:00</updated>
    <id>http://alfilatov.com/blog/2014/04/23/aspnet</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div class="separator" style="clear: both; text-align: center;"></div><br /><div style="text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif;">Наверно редкое собеседование по&nbsp;ASP.NET&nbsp;не обходится без вопроса о жизненном цикле&nbsp;страницы в ASP.NET Web Forms (далее для краткости&nbsp;ASP.NET). Попытаемся разобраться в этом вопросе. Разделил тему на две. В текущей статье разберем </span><b style="font-family: Arial, Helvetica, sans-serif;">этапы&nbsp;жизненного цикла страницы в ASP.NET</b><span style="font-family: Arial, Helvetica, sans-serif;">.</span></div><br /><h2 style="text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif; font-size: small;">Общий план</span></h2><div style="border: 0px; margin-bottom: 0.714285em; padding: 0px; text-align: justify;"><h3 style="line-height: 19.9999942779541px;"><span style="font-family: Arial, Helvetica, sans-serif; font-size: small;"><b>Жизненный цикл страницы ASP.NET</b></span></h3><ol style="line-height: 19.9999942779541px;"><li style="text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif; text-align: left;">получение и обработка web-сервером IIS запроса к странице</span></li><li style="text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif; text-align: left;">дальнейшей передачи запроса среде выполнения ASP.NET.</span></li><li style="text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif; text-align: left;">среда выполнения:</span></li><ol><li style="text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif; text-align: left;">загружает класс вызываемой страницы</span></li><li style="text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif; text-align: left;">устанавливает свойства класса страницы</span></li><li style="text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif; text-align: left;">выстраивает дерево элементов</span></li><li style="text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif; text-align: left;">заполняет свойства Request и Response</span></li><li style="text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif; text-align: left;">вызывает метод IHttpHandler.ProcessRequest</span></li></ol></ol><div style="line-height: 19.9999942779541px;"><span style="font-family: Arial, Helvetica, sans-serif;"></span><br /><a name='more'></a><span style="font-family: Arial, Helvetica, sans-serif;"><br /></span></div><div style="line-height: 19.9999942779541px;"><span style="font-family: Arial, Helvetica, sans-serif;">Далее среда выполнения проверяет каким образом была вызвана эта страницы и если страница вызвана путем передачи данных с другой страницы, то среда выполнения устанавливает свойство PreviousPage.</span></div><h2 style="line-height: 19.9999942779541px;"><span style="font-family: Arial, Helvetica, sans-serif; font-size: small;">Этапы</span></h2><div style="line-height: 19.9999942779541px;"><span style="font-family: Arial, Helvetica, sans-serif;">Выделяется 8 основных этапов.&nbsp;</span><span style="text-align: left;"><span style="font-family: Arial, Helvetica, sans-serif;">Наглядно это демонстрирует&nbsp;</span></span><span style="font-family: Arial, Helvetica, sans-serif; line-height: normal; text-align: left;">следующая схема</span></div></div><table border="0" cellpadding="5" cellspacing="2" style="line-height: 1.428571em; text-align: justify;"><tbody style="line-height: 1.428571em;"><tr style="line-height: 1.428571em;"><th colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;">Этап</span></th><th colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;">Описание</span></th></tr><tr style="line-height: 1.428571em;"><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;"><i>Запрос станицы</i></span></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;">Запрос страницы осуществляется до начала жизненного цикла страницы. Пользователь осуществляет запрос, среда выполнения ASP.NET устанавливает, необходимо ли осуществить компиляцию страницы и начать жизненный цикл, либо можно выдать в качестве ответа страницу из кеша, не выполняя страницы.</span></td></tr><tr style="line-height: 1.428571em;"><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;"><i>Начало обработки</i></span></td><td colspan="1" rowspan="1" style="padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;"><span style="line-height: 1.428571em;">На этом этапе происходит установка свойство Response и Request и свойства UICulture. Также, на этом этапе устанавливается, была ли эта страница запрошена в результате postback и соответствующим образом устанавливается&nbsp;</span>свойство<span style="line-height: 1.428571em;">&nbsp;IsPostBack.</span></span></td></tr><tr style="line-height: 1.428571em;"><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;"><i>Инициализация страницы</i></span></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;">Ко времени инициализации страницы все дочерние пользовательские элементы управления уже созданы и имеют установленный свойства UniqueID. В это время к странице применяются темы оформления. Если страница вызвана в результате&nbsp;</span><span style="font-family: Arial, Helvetica, sans-serif;">postback</span><span style="font-family: Arial, Helvetica, sans-serif;">, то данные,&nbsp;отправленные на сервер, еще не загружены в свойства элементов управления, на этом этапе.</span></td></tr><tr style="line-height: 1.428571em;"><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;"><i>Загрузка</i></span></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;">Если страница вызвана в результате&nbsp;</span><span style="font-family: Arial, Helvetica, sans-serif;">postback</span><span style="font-family: Arial, Helvetica, sans-serif;">, то на этом этапе&nbsp;устанавливаются свойства элементов управления, на основании информации о состоянии (ViewState и ControlState).</span></td></tr><tr style="line-height: 1.428571em;"><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;"><i>Валидация</i></span></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;">Вызывается метод Validate() для всех, находящихся на странице валидаторов.</span></td></tr><tr style="line-height: 1.428571em;"><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;"><i>Обработка постбэка</i></span></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;">Вызываются обработчики событий если&nbsp;</span><span style="font-family: Arial, Helvetica, sans-serif;">postback&nbsp;</span><span style="font-family: Arial, Helvetica, sans-serif;">произошел.</span></td></tr><tr style="line-height: 1.428571em;"><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;"><i>Рендеринг</i></span></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;">Сохраняется информация о состоянии, затем класс страницы вызывает соответствующие методы дочерних элементов управления для генерации HTML представления и передачи его в Response.OutputStream.</span></td></tr><tr style="line-height: 1.428571em;"><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;"><i>Выгрузка</i></span></td><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><span style="font-family: Arial, Helvetica, sans-serif;">Выгрузка происходит после того, как создано HTML представление для всей страницы.</span></td></tr></tbody></table></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[StyleCop - или как соблюдать Code Style?]]></title>
    <link href="http://alfilatov.com/blog/2014/03/30/stylecop/"/>
    <updated>2014-03-30T00:00:00+00:00</updated>
    <id>http://alfilatov.com/blog/2014/03/30/stylecop</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><span style="font-family: Arial, Helvetica, sans-serif;">Думаю что в каждой компании существует свой code style по написанию правильного и красивого кода. Недавно в одном из проектов наша команда решила &#8220;причесать&#8221; код. На помощь пришел <b>StyleCop</b>. Итак.</span><br /><h2 style="text-align: left;"><b><span style="font-family: Arial, Helvetica, sans-serif;">Установка</span></b></h2><div><ol style="text-align: left;"><li><span style="font-family: Arial, Helvetica, sans-serif;">Вы можете скачать <b>stylecop</b> c <a href="http://stylecop.codeplex.com/" target="_blank">сайта</a><span style="font-size: 14px; line-height: 19.9999942779541px;">.</span></span></li><li><span style="font-family: Arial, Helvetica, sans-serif;"><span style="font-size: 14px; line-height: 19.9999942779541px;">Советую не изменять пусть установки, потому что</span><span style="font-size: 14px; line-height: 19.9999942779541px;">&nbsp;это может привести к некоторым проблемам.</span></span></li><li><span style="font-family: Arial, Helvetica, sans-serif; font-size: 14px; line-height: 19.9999942779541px;">После установки может потребоваться перезагрузка компьютера.</span></li></ol><div><h2 style="border: 0px; font-size: 1em; line-height: 19.9999942779541px; margin: 1.4285em 0px 0.714285em; padding: 0px; text-align: left;"><span style="font-family: Arial, Helvetica, sans-serif;">Настройка</span></h2><div><span style="font-family: Arial, Helvetica, sans-serif;">Для установки настроек <b>stylecop </b>одинаковыми на всех ваших проектах нужно выполнить следующие действия:</span></div><div><span style="font-family: Arial, Helvetica, sans-serif;"></span><br /><a name='more'></a><span style="font-family: Arial, Helvetica, sans-serif;"><br /></span></div><div><ul style="text-align: left;"><li><span style="font-family: Arial, Helvetica, sans-serif;">Клик правой кнопкой мыши выбираем раздел&nbsp;<span style="font-size: 14px; line-height: 19.9999942779541px;"><i>&#8216;StyleCop Settings&#8217;</i>.&nbsp;<div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-Ff4lI2D2Vt8/UzhuaRggbMI/AAAAAAAAA_8/GdbfdLYTOtM/s1600/2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-Ff4lI2D2Vt8/UzhuaRggbMI/AAAAAAAAA_8/GdbfdLYTOtM/s1600/2.png" /></a></div></span><span style="font-size: 14px; line-height: 19.9999942779541px;">Разберем каждую вкладку в отдельности</span></span></li><ul><li><span style="font-family: Arial, Helvetica, sans-serif; font-size: 14px; line-height: 19.9999942779541px;"><i><b>&#8216;Rules&#8217;</b> - </i>правила настройки stylecop</span></li><li><span style="font-family: Arial, Helvetica, sans-serif;"><span style="font-size: 14px; line-height: 19.9999942779541px;">Переходим на вкладку&nbsp;</span><span style="font-size: 14px; line-height: 19.9999942779541px;"><i><b>&#8216;Settings Files&#8217;</b>.&nbsp;</i></span></span></li><ul><li><span style="font-family: Arial, Helvetica, sans-serif; font-size: 14px; line-height: 19.9999942779541px;">1-ый радиобаттон &nbsp;значит не использовать наследование настроек stylecop в солюшене и в проектах</span></li><li><span style="font-family: Arial, Helvetica, sans-serif;"><span style="font-size: 14px; line-height: 19.9999942779541px;">2-ой - поддержка&nbsp;наследования/переопределения файлов настроек. Т.е файл с настройками&nbsp;лежащий на уровне выше имеет выше приоритет. Solution - project. Если вы хотите&nbsp;</span><strong style="line-height: 1.428571em;">изменить настройки для всех проектов сразу</strong>, вам нужно перейти на эту вкладку, нажать <i>&#8220;Edit&#8221;</i>, и вы увидите окно файла конфигурации с настройками.</span></li><li><span style="font-family: Arial, Helvetica, sans-serif; font-size: 14px; line-height: 19.9999942779541px;">3-й мерж настроек с указанным файлом.</span></li></ul></ul></ul></div><div style="border: 0px; font-size: 14px; line-height: 19.9999942779541px; margin-bottom: 0.714285em; padding: 0px;"><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-zSzjZtQ2K2k/UzhiQvLTXaI/AAAAAAAAA_s/twkcNLtIRYQ/s1600/1.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><span style="font-family: Arial, Helvetica, sans-serif;"><img border="0" src="http://1.bp.blogspot.com/-zSzjZtQ2K2k/UzhiQvLTXaI/AAAAAAAAA_s/twkcNLtIRYQ/s1600/1.png" /></span></a></div><div class="separator" style="clear: both; text-align: center;"><span style="font-family: Arial, Helvetica, sans-serif;"><br /></span></div><div class="separator" style="clear: both; text-align: center;"></div><ul><ul><li><span style="font-family: Arial, Helvetica, sans-serif;"><b style="font-style: italic;">&#8220;Options&#8221; </b>- настройки обновления и выбор языка</span></li><li><span style="font-family: Arial, Helvetica, sans-serif;"><i style="font-weight: bold;">&#8220;Spelling&#8221; </i>- сюда можно добавить слова исключения при проверки stylecop.</span></li><li><span style="font-family: Arial, Helvetica, sans-serif;"><b><i>&#8220;Company information&#8221;</i></b> - думаю и так все понятно :)</span></li><li><span style="font-family: Arial, Helvetica, sans-serif;"><i style="font-weight: bold;">&#8220;Hungarian&#8221; </i>- по умолчанию венгерский стиль отключен, но на этой вкладке вы можете добавить исключения.</span></li></ul></ul><div><span style="font-family: Arial, Helvetica, sans-serif;">Больше правил и настроек <b>stylecop </b>вы можете найти на <a href="http://www.stylecop.com/docs/" target="_blank">официальном сайте программы</a>.&nbsp;Так же там есть&nbsp;Rule Suppressions, но лучше ими не злоупотреблять.</span></div></div></div></div><div><h2 style="border: 0px; font-size: 1em; line-height: 19.9999942779541px; margin: 1.4285em 0px 0.714285em; padding: 0px; text-align: left;"><span style="font-family: Arial, Helvetica, sans-serif;">StyleCop и Build</span></h2><div style="border: 0px; font-size: 14px; line-height: 19.9999942779541px; margin-bottom: 0.714285em; padding: 0px;"><span style="font-family: Arial, Helvetica, sans-serif;">Если вы хотите запускать StyleCop при каждом билде проекта, вам следует отредактировать .csproj file:</span><br /><span style="font-family: Arial, Helvetica, sans-serif;">В конец файла следует добавить следующую строку (для StyleCop v4.7 ):</span></div><div style="border: 0px; font-size: 14px; line-height: 19.9999942779541px; margin: 0px; padding: 0px;"><div style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;"><div style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;"><table border="0" cellpadding="0" cellspacing="0" style="font-size: 1em; line-height: 1.428571em;"><tbody style="line-height: 1.428571em;"><tr style="line-height: 1.428571em;"><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><div style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;" title="Hint: double-click to select code"><div style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;"><span style="font-family: Arial, Helvetica, sans-serif;"><code style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;">&lt;Import Project=</code><code style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;">"$(ProgramFiles)\MSBuild\StyleCop\v4.7\StyleCop.targets"</code>&nbsp;<code style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;">/&gt;</code></span><br /><span style="font-family: Arial, Helvetica, sans-serif;"><code style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;"><br /></code></span><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-SDkTXb4NLbE/Uzhvc4Dig2I/AAAAAAAABAE/RhC66zW-saI/s1600/3.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><span style="font-family: Arial, Helvetica, sans-serif;"><img border="0" src="http://1.bp.blogspot.com/-SDkTXb4NLbE/Uzhvc4Dig2I/AAAAAAAABAE/RhC66zW-saI/s1600/3.png" height="267" width="640" /></span></a></div><code style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;"><span style="font-family: Arial, Helvetica, sans-serif;"><br /></span></code></div></div></td></tr></tbody></table></div></div></div><div style="border: 0px; font-size: 14px; line-height: 19.9999942779541px; margin-bottom: 0.714285em; padding: 0px;"><div><span style="font-family: Arial, Helvetica, sans-serif;"><br /></span></div><span style="font-family: Arial, Helvetica, sans-serif;">После этого вы бедете получать <b>warnings </b>в коде после билда о всех несоответствиях вашего кода с настройками <b>stylecop</b>.&nbsp;</span></div><div style="border: 0px; font-size: 14px; line-height: 19.9999942779541px; margin-bottom: 0.714285em; padding: 0px;"><span style="font-family: Arial, Helvetica, sans-serif;">Если вы хотите получать <b>errors</b>, вам следует добавить в&nbsp;<i><b>раздел &#8216;PropertyGroup&#8217;</b></i> следующую строку:</span></div><div style="border: 0px; font-size: 14px; line-height: 19.9999942779541px; margin: 0px; padding: 0px;"><div style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;"><div style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;"><table border="0" cellpadding="0" cellspacing="0" style="font-size: 1em; line-height: 1.428571em;"><tbody style="line-height: 1.428571em;"><tr style="line-height: 1.428571em;"><td colspan="1" rowspan="1" style="line-height: 1.428571em; padding: 0.2em 2em 0.2em 0em;"><div style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;" title="Hint: double-click to select code"><div style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;"><span style="font-family: Arial, Helvetica, sans-serif;"><code style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;">&lt;StyleCopTreatErrorsAsWarnings&gt;</code><code style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;">false</code><code style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;">&lt;/StyleCopTreatErrorsAsWarnings&gt;</code></span><br /><span style="font-family: Arial, Helvetica, sans-serif;"><code style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;"><br /></code></span><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-9SnH6nIlF9w/Uzhw2FtausI/AAAAAAAABAQ/KSjgBAcDLH8/s1600/4.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><span style="font-family: Arial, Helvetica, sans-serif;"><img border="0" src="http://1.bp.blogspot.com/-9SnH6nIlF9w/Uzhw2FtausI/AAAAAAAABAQ/KSjgBAcDLH8/s1600/4.png" height="376" width="640" /></span></a></div><div class="separator" style="clear: both; text-align: center;"><span style="font-family: Arial, Helvetica, sans-serif;"><br /></span></div><div class="separator" style="clear: both; text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif;">На этом моя статья по установке и настройке stylecop подошла к концу. Надеюсь в ней вы найдете что-то интересное для себя.&nbsp;</span></div><div class="separator" style="clear: both; text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif;"><br /></span></div><div class="separator" style="clear: both; text-align: justify;"><span style="font-family: Arial, Helvetica, sans-serif;"><span style="background-color: white; font-size: 13px; line-height: 18.479999542236328px; text-align: start;">Со мной вы можете связаться через&nbsp;</span><a href="https://twitter.com/greybax" rel="nofollow" style="background-color: white; color: purple; font-size: 13px; line-height: 18.479999542236328px; text-align: start;">twitter</a><span style="background-color: white; font-size: 13px; line-height: 18.479999542236328px; text-align: start;">&nbsp;или&nbsp;</span><a href="http://greybax.blogspot.com/" style="background-color: white; color: purple; font-size: 13px; line-height: 18.479999542236328px; text-align: start;">блог</a><span style="background-color: white; font-size: 13px; line-height: 18.479999542236328px; text-align: start;">.</span></span></div><div class="separator" style="clear: both; text-align: justify;"><span style="background-color: white; font-family: Arial, Helvetica, sans-serif; font-size: 13px; line-height: 18.479999542236328px; text-align: start;"><br /></span></div><div class="separator" style="clear: both; text-align: right;"><span style="font-family: Arial, Helvetica, sans-serif;">Спасибо.</span></div><code style="border: 0px; line-height: 1.428571em; margin: 0px; padding: 0px;"><span style="font-family: Arial, Helvetica, sans-serif;"><br /></span></code></div></div></td></tr></tbody></table></div></div></div></div></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows 7 HotKeys]]></title>
    <link href="http://alfilatov.com/blog/2012/12/18/windows-7-hotkeys/"/>
    <updated>2012-12-18T00:00:00+00:00</updated>
    <id>http://alfilatov.com/blog/2012/12/18/windows-7-hotkeys</id>
    <content type="html"><![CDATA[<div class='post'>
<span style="background-color: white;"><span style="font-family: Arial, sans-serif;"><span style="font-size: 15px;">I would like propose to your attention the list of hotkeys, the use of which makes the work with the Windows 7 more&nbsp;usability. Some hotkeys&nbsp;</span></span></span><span style="background-color: white; font-family: Arial, sans-serif; font-size: 15px;">may be available in Windows 8.&nbsp;</span><br /><br style="background-color: white; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px;" /><h4 style="background-color: white; border: 0px; color: #999999; font-family: Verdana, sans-serif; font-size: 16px; font-weight: normal; line-height: 20px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Manage windows</h4><br style="background-color: white; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px;" /><ul style="background-color: white; border: 0px; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px; list-style-image: initial; list-style-position: outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Home</b>: Minimize/Maximize all windows, but active. («Shake» the window)</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Space</b>: Make all windows <span style="font-family: Arial, sans-serif; font-size: 15px; line-height: normal;">transparent</span>.</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Up</b>: Maximize active window full screen.&nbsp;</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Down</b>: Minimize active window or restore previous size, if it maximized on full screen.</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Shift</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Up</b>: Expand the window height (drag the bottom border of the window to the taskbar)</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Left</b>/<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Right</b>: Take the window left / right side of the monitor, or restore the size (drag the window to the left / right all the way)</li></ul><br /><a name='more'></a><br style="background-color: white; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px;" /><br /><h4 style="background-color: white; border: 0px; color: #999999; font-family: Verdana, sans-serif; font-size: 16px; font-weight: normal; line-height: 20px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Taskbar</h4><br style="background-color: white; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px;" /><ul style="background-color: white; border: 0px; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px; list-style-image: initial; list-style-position: outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">digit</b>: Run the program with that number, or switch to it.</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Shift</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">digit</b>: Launch a new copy of the program under this number (click on the wheel icon).</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Ctrl</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">digit</b>: Switch to the next window in that number (click, hold&nbsp;<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Ctrl</b>).</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Alt</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">digit</b>: Open jump list program under this number.</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">T</b>(+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Shift</b>): Switch between all open windows on the taskbar thumbnails in the forward (reverse) order.</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">B</b>: Focus on the tray.</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Ctrl</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Shift</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Click</b>: Run this program as an administrator.</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Shift</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Right-click</b>: Show the window menu / group.</li></ul><br style="background-color: white; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px;" /><h4 style="background-color: white; border: 0px; color: #999999; font-family: Verdana, sans-serif; font-size: 16px; font-weight: normal; line-height: 20px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Explorer (and Desktop)</h4><br style="background-color: white; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px;" /><ul style="background-color: white; border: 0px; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px; list-style-image: initial; list-style-position: outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Ctrl</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Shift</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">N</b>: Create new folder.</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Alt</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Up</b>: To rise to a higher level by folder.</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Alt</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">P</b>: Enable file browsing panel.</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Shift</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Right-Click</b>&nbsp;(on ​​file): Adds a context menu item &#8220;Copy path&#8221; and a lot of additional items in the menu &#8220;Send&#8221;</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Shift</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Right-Click</b>&nbsp;(a folder): Adds a context menu that lets you open a command prompt in that folder.</li></ul><br style="background-color: white; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px;" /><h4 style="background-color: white; border: 0px; color: #999999; font-family: Verdana, sans-serif; font-size: 16px; font-weight: normal; line-height: 20px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Other</h4><br style="background-color: white; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px;" /><ul style="background-color: white; border: 0px; font-family: Verdana, sans-serif; font-size: 13px; line-height: 20px; list-style-image: initial; list-style-position: outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">P</b>: Open setting menu presentation (second monitor - projector)</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+(<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">+</b>/<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">-</b>): zoom in / zoom out (causes Magnifier).</li><li style="border: 0px; list-style: disc outside; margin: 0px 0px 0px 20px; outline: 0px; padding: 0px; vertical-align: baseline;"><b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">Win</b>+<b style="border: 0px; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline;">G</b>: Switch between running gadgets.</li></ul></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yandex Browser? It's Need or Not?]]></title>
    <link href="http://alfilatov.com/blog/2012/12/13/yandex-browser-it-need-or-not/"/>
    <updated>2012-12-13T00:00:00+00:00</updated>
    <id>http://alfilatov.com/blog/2012/12/13/yandex-browser-it-need-or-not</id>
    <content type="html"><![CDATA[<div class='post'>
<div style="text-align: justify;"><blockquote class="tr_bq" style="text-align: right;"><span style="background-color: white; font-family: Arial, Helvetica, sans-serif; font-size: 13px; text-align: left;">Yandex.Browser with a full set of features designed specifically for the English-speaking users will be released soon. (с)</span></blockquote><div class="separator" style="clear: both; text-align: center;"><a href="http://yabs.yandex.ru/count/AI9QGHYaezm40002Zhqbnmm5KPK2cmPfMeYosr1G0vAjXGQgfZIAe4K6Kge2fPOOP92W7mBUaRpGIMG6an11hlnExYmQdEFG1B41VmS0" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://yabs.yandex.ru/count/AI9QGHYaezm40002Zhqbnmm5KPK2cmPfMeYosr1G0vAjXGQgfZIAe4K6Kge2fPOOP92W7mBUaRpGIMG6an11hlnExYmQdEFG1B41VmS0" /></a></div>Not so early, Yandex company on yours conference is <a href="http://fotki.yandex.ru/users/ya-events/album/136128/" target="_blank">YaC 2012</a> present the <a href="http://browser.yandex.com/" target="_blank">Yandex browser 1.0</a>. Let&#8217;s show it inside.<br /><img alt="Новый Яндекс.Браузер" src="http://yandex.st/lego/_/La6qi18Z8LwgnZdsAr1qy1GwCwo.gif" /><br /><img alt="Новый Яндекс.Браузер" class="b-icon" src="http://yandex.st/lego/_/La6qi18Z8LwgnZdsAr1qy1GwCwo.gif" /></div><div style="text-align: justify;">The engine of this thing is open source&nbsp; browser Chromium. Some intresting, that Some sites detected that it&#8217;s 19 version of google chr<span style="font-family: inherit;">ome, but at the moment of this post Google Chrome has 23.xxx version :). String of search find in Yandex on default. So, already we have some Google and some Yandex. &#8220;Yeah.. Not enough Opera&#8221; - thinking guys from Yandex and added Turbo technology by Opera. It&#8217;s mix equals to Yandex browser. Some people have</span> a nick &#8220;Stringy&#8221; for the specific logo.</div><br /><a name='more'></a><br /><br /><div style="text-align: justify;">And we can see a mix of modern teccnology. Therefore, on my mind it&#8217;s &#8220;discovered bicycle&#8221; (it is russian flying phrase). At the first time, we can&#8217;t see new&nbsp;any&nbsp;features.&nbsp;Of all proposed <a href="http://browser.yandex.com/" target="_blank">here</a>,&nbsp;I would single out only the following:</div><ol><a href="http://browser.yandex.com/i/win-feature-turbo-com-eng.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em; text-align: center;"><img border="0" src="http://browser.yandex.com/i/win-feature-turbo-com-eng.png" height="180" width="320" /></a></ol><span style="font-family: inherit; text-align: justify;">&nbsp;1. &nbsp;New view of URL. Now url will not so lenght. It&#8217;s will be name of web page look like bread crumbs.</span><br /><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><br /></div><div style="text-align: justify;"><br /></div><span style="font-family: inherit; text-align: justify;"></span><br /><div><span style="font-family: inherit; text-align: justify;"><span style="font-family: inherit; text-align: justify;"><br /></span></span></div><span style="font-family: inherit; text-align: justify;"></span><br /><div><span style="font-family: inherit; text-align: justify;"><span style="font-family: inherit; text-align: justify;"><br /></span></span></div><span style="font-family: inherit; text-align: justify;"></span><div><span style="font-family: inherit; text-align: justify;"><span style="font-family: inherit; text-align: justify;"><br /></span></span></div><span style="font-family: inherit; text-align: justify;">2. New menu of fast link - &#8220;Tableu&#8221;. F</span><span style="background-color: white; font-size: 14px; line-height: 18px; text-align: justify;"><span style="font-family: inherit;">avorite sites will only be a click away and colorful widgets will show you up-to-date information about the weather and traffic, as well as social network </span><span style="font-family: Arial, Helvetica, sans-serif;">notifications.</span></span><a href="http://browser.yandex.com/i/win-feature-tablo-com-eng.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em; text-align: center;"><img border="0" src="http://browser.yandex.com/i/win-feature-tablo-com-eng.png" height="180" width="320" /></a><br /><div><br /><span style="font-family: inherit; text-align: justify;">3. Smartbox -&nbsp;</span><span style="background-color: white; font-family: inherit; font-size: 14px; line-height: 18px; text-align: justify;">Enter your searches and websites into the Smartbox. Search suggestions will help you search more quickly and autocorrect errors.</span><br /><div class="separator" style="clear: both; text-align: center;"></div><div class="separator" style="clear: both; text-align: justify;"><span style="clear: right; float: right; font-family: inherit; margin-bottom: 1em; margin-left: 1em;"><img border="0" src="http://browser.yandex.com/i/win-feature-smartsearch-com-eng.png" height="180" width="320" /></span></div><div class="separator" style="clear: both; text-align: justify;"><br /></div><div style="text-align: justify;"><span style="font-family: inherit;">And so on, I think that guys from Yandex must have hard working on th</span>is thing, and may be some version their have a fortune.</div><div style="text-align: justify;"><br /></div></div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Contribution in Mozilla Society]]></title>
    <link href="http://alfilatov.com/blog/2012/12/10/my-contribution-in-mozilla-society/"/>
    <updated>2012-12-10T00:00:00+00:00</updated>
    <id>http://alfilatov.com/blog/2012/12/10/my-contribution-in-mozilla-society</id>
    <content type="html"><![CDATA[<div class='post'>
<div style="text-align: justify;"><blockquote class="tr_bq" style="text-align: right;"><br /><div style="text-align: justify;"><i style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18.200000762939453px; text-align: left;">It&#8217;s my first publication on english language. And it&#8217;s blog some training for my english, so I sorry for my not well english, because english is not my first language.</i></div></blockquote><a href="http://people.mozilla.com/~faaborg/files/shiretoko/firefoxIcon/firefox-512-noshadow.png" imageanchor="1" style="clear: left; color: #4d469c; float: left; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18.200000762939453px; margin-bottom: 1em; margin-right: 1em; text-decoration: none;"><img border="0" height="320" src="http://people.mozilla.com/~faaborg/files/shiretoko/firefoxIcon/firefox-512-noshadow.png" style="-webkit-box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 0px; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; border: 1px solid transparent; box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 0px; padding: 8px; position: relative;" width="320" /></a><br /><blockquote class="tr_bq" style="text-align: right;"><span style="background-color: white; text-align: left;"></span><br /><div style="text-align: justify;"><span style="color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18.200000762939453px;"><br /></span></div><span style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18.200000762939453px; text-align: left;"><div style="text-align: justify;">And so on, in this topic I would like say about Mozilla society. And how I become &nbsp;in mozilla contribution list &nbsp; &nbsp;. For me it&#8217;s very intresting to participate in some activities. But I&#8217;m not a mozilla evangelist. :)</div></span><div style="text-align: justify;"><span style="color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18.200000762939453px;"><br /></span></div><span style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18.200000762939453px; text-align: left;"><div style="text-align: justify;">I think that not secret for each other that mozilla it&#8217;s &nbsp;global web society where each people can have yours contribution: programming, &nbsp;design sites, translate article on&nbsp;<a href="https://developer.mozilla.org/ru/" style="color: #4d469c; text-decoration: none;" target="_blank">mozilla network&nbsp;</a>and&nbsp;&nbsp;so on. Site&nbsp;<a href="http://whatcanidoformozilla.org/" style="color: #4d469c; text-decoration: none;" target="_blank">what can I do for mozilla</a>&nbsp;help a new people who it&#8217;s can intrested. If you like makes open source world better, that it&#8217;s makes interested you.</div></span><div style="text-align: justify;"><span style="color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18.200000762939453px;"><br /></span></div><span style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18.200000762939453px; text-align: left;"><div style="text-align: justify;">Some of yours can see page with title &#8220;Our Contributors&#8221; on menu &#8220;About Firefox&#8221; - &#8220;global society&#8221; in mozilla products. Perhaps you too would become on this page. It&#8217;s very easy. There are some&nbsp;<span style="font-family: arial, sans-serif; white-space: nowrap;">advice after this.&nbsp;</span></div></span><span style="background-color: white; text-align: left;"><div style="text-align: justify;"><span style="color: #444444; font-family: arial, sans-serif; font-size: 13px; line-height: 18.200000762939453px; white-space: nowrap;"><br /></span></div></span><span style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18.200000762939453px; text-align: left;"><div style="text-align: justify;"><b>What can you make for example:</b></div></span><br /><ol style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; line-height: 18.200000762939453px; text-align: left;"><li style="margin: 0px 0px 0.25em; padding: 0px; text-align: justify;">Translate to russian some topics on&nbsp;<a href="https://developer.mozilla.org/ru/" style="color: #4d469c; text-decoration: none;" target="_blank">mozilla network</a>&nbsp;or other resource of this society.</li><li style="margin: 0px 0px 0.25em; padding: 0px; text-align: justify;">If you programmer you can started for fix some light bugs of Firefox, Thunderbird, and etc. After your &nbsp;review code you can get access to repository with more content.</li><li style="margin: 0px 0px 0.25em; padding: 0px; text-align: justify;">If you think that you makes some good things for society you can send letter to credits@mozilla.org &nbsp;giving your name, email address and a sentence (citation) summarizing your contribution.</li><li style="margin: 0px 0px 0.25em; padding: 0px; text-align: justify;">If it&#8217;s true you have a lot of chance be on board contribution. And have&nbsp;mental pleasure :)</li></ol></blockquote></div></div>
]]></content>
  </entry>
  
</feed>
